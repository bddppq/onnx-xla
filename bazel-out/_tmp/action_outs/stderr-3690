In file included from ./tensorflow/compiler/xla/service/hlo_computation.h:33:0,
                 from ./tensorflow/compiler/xla/service/hlo_module.h:30,
                 from ./tensorflow/compiler/xla/service/hlo_pass_interface.h:19,
                 from ./tensorflow/compiler/xla/service/hlo_verifier.h:19,
                 from tensorflow/compiler/xla/service/hlo_verifier.cc:19:
./tensorflow/compiler/xla/service/hlo_instruction.h: In member function 'void xla::HloInstruction::ReplaceCalledComputations(std::function<xla::HloComputation*(xla::HloComputation*)>)':
./tensorflow/compiler/xla/service/hlo_instruction.h:1159:25: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (int64 i = 0; i < called_computations_.size(); ++i) {
                         ^
In file included from ./tensorflow/core/platform/default/logging.h:24:0,
                 from ./tensorflow/core/platform/logging.h:25,
                 from ./tensorflow/core/lib/core/status.h:25,
                 from ./tensorflow/compiler/xla/status.h:19,
                 from ./tensorflow/compiler/xla/statusor.h:71,
                 from ./tensorflow/compiler/xla/service/hlo_opcode.h:21,
                 from tensorflow/compiler/xla/service/hlo_verifier.cc:18:
tensorflow/compiler/xla/service/hlo_verifier.cc: In member function 'virtual tensorflow::Status xla::ShapeVerifier::HandleBroadcast(xla::HloInstruction*)':
tensorflow/compiler/xla/service/hlo_verifier.cc:172:47: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   TF_RET_CHECK(ShapeUtil::Rank(operand_shape) ==
                                               ^
./tensorflow/core/platform/macros.h:87:47: note: in definition of macro 'TF_PREDICT_FALSE'
 #define TF_PREDICT_FALSE(x) (__builtin_expect(x, 0))
                                               ^
tensorflow/compiler/xla/service/hlo_verifier.cc:172:3: note: in expansion of macro 'TF_RET_CHECK'
   TF_RET_CHECK(ShapeUtil::Rank(operand_shape) ==
   ^
tensorflow/compiler/xla/service/hlo_verifier.cc: In member function 'tensorflow::Status xla::HloVerifier::CheckFusionInstruction(xla::HloInstruction*) const':
tensorflow/compiler/xla/service/hlo_verifier.cc:644:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (int i = 0; i < fused_parameters.size(); ++i) {
                       ^
tensorflow/compiler/xla/service/hlo_verifier.cc:659:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (int i = 0; i < parameter_owned.size(); i++) {
                     ^
tensorflow/compiler/xla/service/hlo_verifier.cc:702:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if (param_no >= fused_parameters.size()) {
                  ^
tensorflow/compiler/xla/service/hlo_verifier.cc:722:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for (int i = 0; i < parameter_numbers.size(); i++) {
                     ^
In file included from ./tensorflow/core/platform/default/logging.h:24:0,
                 from ./tensorflow/core/platform/logging.h:25,
                 from ./tensorflow/core/lib/core/status.h:25,
                 from ./tensorflow/compiler/xla/status.h:19,
                 from ./tensorflow/compiler/xla/statusor.h:71,
                 from ./tensorflow/compiler/xla/service/hlo_opcode.h:21,
                 from tensorflow/compiler/xla/service/hlo_verifier.cc:18:
tensorflow/compiler/xla/service/hlo_verifier.cc: In member function 'virtual xla::StatusOr<bool> xla::HloVerifier::Run(xla::HloModule*)':
tensorflow/compiler/xla/service/hlo_verifier.cc:875:55: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
         TF_RET_CHECK(instruction->dimensions().size() ==
                                                       ^
./tensorflow/core/platform/macros.h:87:47: note: in definition of macro 'TF_PREDICT_FALSE'
 #define TF_PREDICT_FALSE(x) (__builtin_expect(x, 0))
                                               ^
tensorflow/compiler/xla/service/hlo_verifier.cc:875:9: note: in expansion of macro 'TF_RET_CHECK'
         TF_RET_CHECK(instruction->dimensions().size() ==
         ^
./tensorflow/core/platform/default/logging.h: In instantiation of 'std::__cxx11::string* tensorflow::internal::Check_LEImpl(const T1&, const T2&, const char*) [with T1 = long long int; T2 = long unsigned int; std::__cxx11::string = std::__cxx11::basic_string<char>]':
./tensorflow/compiler/xla/shape_util.h:115:5:   required from here
./tensorflow/core/platform/default/logging.h:232:35: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 TF_DEFINE_CHECK_OP_IMPL(Check_LE, <=)
                                   ^
./tensorflow/core/platform/macros.h:88:49: note: in definition of macro 'TF_PREDICT_TRUE'
 #define TF_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
                                                 ^
./tensorflow/core/platform/default/logging.h:232:1: note: in expansion of macro 'TF_DEFINE_CHECK_OP_IMPL'
 TF_DEFINE_CHECK_OP_IMPL(Check_LE, <=)
 ^
In file included from ./tensorflow/compiler/xla/array2d.h:27:0,
                 from ./tensorflow/compiler/xla/literal_util.h:30,
                 from ./tensorflow/compiler/xla/service/dfs_hlo_visitor.h:22,
                 from ./tensorflow/compiler/xla/service/hlo_computation.h:29,
                 from ./tensorflow/compiler/xla/service/hlo_module.h:30,
                 from ./tensorflow/compiler/xla/service/hlo_pass_interface.h:19,
                 from ./tensorflow/compiler/xla/service/hlo_verifier.h:19,
                 from tensorflow/compiler/xla/service/hlo_verifier.cc:19:
./tensorflow/compiler/xla/array.h: In instantiation of 'bool xla::Array<T>::operator==(const xla::Array<T>&) const [with T = long long int]':
./tensorflow/compiler/xla/service/hlo_sharding.h:177:38:   required from here
./tensorflow/compiler/xla/array.h:425:25: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for (int64 i = 0; i < sizes_.size(); ++i) {
                         ^
