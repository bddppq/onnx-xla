// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/xla/xla_data.proto

#ifndef PROTOBUF_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto_INCLUDED
#define PROTOBUF_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[21];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPaddingConfig_PaddingConfigDimensionImpl();
void InitDefaultsPaddingConfig_PaddingConfigDimension();
void InitDefaultsPaddingConfigImpl();
void InitDefaultsPaddingConfig();
void InitDefaultsLayoutImpl();
void InitDefaultsLayout();
void InitDefaultsShapeImpl();
void InitDefaultsShape();
void InitDefaultsProgramShapeImpl();
void InitDefaultsProgramShape();
void InitDefaultsComputationStatsImpl();
void InitDefaultsComputationStats();
void InitDefaultsOpMetadataImpl();
void InitDefaultsOpMetadata();
void InitDefaultsExecutionProfileImpl();
void InitDefaultsExecutionProfile();
void InitDefaultsExecutionHandleImpl();
void InitDefaultsExecutionHandle();
void InitDefaultsGlobalDataHandleImpl();
void InitDefaultsGlobalDataHandle();
void InitDefaultsDeviceHandleImpl();
void InitDefaultsDeviceHandle();
void InitDefaultsChannelHandleImpl();
void InitDefaultsChannelHandle();
void InitDefaultsDeviceAssignmentProto_ComputationDeviceImpl();
void InitDefaultsDeviceAssignmentProto_ComputationDevice();
void InitDefaultsDeviceAssignmentProtoImpl();
void InitDefaultsDeviceAssignmentProto();
void InitDefaultsLiteralProtoImpl();
void InitDefaultsLiteralProto();
void InitDefaultsWindowDimensionImpl();
void InitDefaultsWindowDimension();
void InitDefaultsWindowImpl();
void InitDefaultsWindow();
void InitDefaultsGatherDimensionNumbersImpl();
void InitDefaultsGatherDimensionNumbers();
void InitDefaultsConvolutionDimensionNumbersImpl();
void InitDefaultsConvolutionDimensionNumbers();
void InitDefaultsDotDimensionNumbersImpl();
void InitDefaultsDotDimensionNumbers();
void InitDefaultsOpShardingImpl();
void InitDefaultsOpSharding();
inline void InitDefaults() {
  InitDefaultsPaddingConfig_PaddingConfigDimension();
  InitDefaultsPaddingConfig();
  InitDefaultsLayout();
  InitDefaultsShape();
  InitDefaultsProgramShape();
  InitDefaultsComputationStats();
  InitDefaultsOpMetadata();
  InitDefaultsExecutionProfile();
  InitDefaultsExecutionHandle();
  InitDefaultsGlobalDataHandle();
  InitDefaultsDeviceHandle();
  InitDefaultsChannelHandle();
  InitDefaultsDeviceAssignmentProto_ComputationDevice();
  InitDefaultsDeviceAssignmentProto();
  InitDefaultsLiteralProto();
  InitDefaultsWindowDimension();
  InitDefaultsWindow();
  InitDefaultsGatherDimensionNumbers();
  InitDefaultsConvolutionDimensionNumbers();
  InitDefaultsDotDimensionNumbers();
  InitDefaultsOpSharding();
}
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto
namespace xla {
class ChannelHandle;
class ChannelHandleDefaultTypeInternal;
extern ChannelHandleDefaultTypeInternal _ChannelHandle_default_instance_;
class ComputationStats;
class ComputationStatsDefaultTypeInternal;
extern ComputationStatsDefaultTypeInternal _ComputationStats_default_instance_;
class ConvolutionDimensionNumbers;
class ConvolutionDimensionNumbersDefaultTypeInternal;
extern ConvolutionDimensionNumbersDefaultTypeInternal _ConvolutionDimensionNumbers_default_instance_;
class DeviceAssignmentProto;
class DeviceAssignmentProtoDefaultTypeInternal;
extern DeviceAssignmentProtoDefaultTypeInternal _DeviceAssignmentProto_default_instance_;
class DeviceAssignmentProto_ComputationDevice;
class DeviceAssignmentProto_ComputationDeviceDefaultTypeInternal;
extern DeviceAssignmentProto_ComputationDeviceDefaultTypeInternal _DeviceAssignmentProto_ComputationDevice_default_instance_;
class DeviceHandle;
class DeviceHandleDefaultTypeInternal;
extern DeviceHandleDefaultTypeInternal _DeviceHandle_default_instance_;
class DotDimensionNumbers;
class DotDimensionNumbersDefaultTypeInternal;
extern DotDimensionNumbersDefaultTypeInternal _DotDimensionNumbers_default_instance_;
class ExecutionHandle;
class ExecutionHandleDefaultTypeInternal;
extern ExecutionHandleDefaultTypeInternal _ExecutionHandle_default_instance_;
class ExecutionProfile;
class ExecutionProfileDefaultTypeInternal;
extern ExecutionProfileDefaultTypeInternal _ExecutionProfile_default_instance_;
class GatherDimensionNumbers;
class GatherDimensionNumbersDefaultTypeInternal;
extern GatherDimensionNumbersDefaultTypeInternal _GatherDimensionNumbers_default_instance_;
class GlobalDataHandle;
class GlobalDataHandleDefaultTypeInternal;
extern GlobalDataHandleDefaultTypeInternal _GlobalDataHandle_default_instance_;
class Layout;
class LayoutDefaultTypeInternal;
extern LayoutDefaultTypeInternal _Layout_default_instance_;
class LiteralProto;
class LiteralProtoDefaultTypeInternal;
extern LiteralProtoDefaultTypeInternal _LiteralProto_default_instance_;
class OpMetadata;
class OpMetadataDefaultTypeInternal;
extern OpMetadataDefaultTypeInternal _OpMetadata_default_instance_;
class OpSharding;
class OpShardingDefaultTypeInternal;
extern OpShardingDefaultTypeInternal _OpSharding_default_instance_;
class PaddingConfig;
class PaddingConfigDefaultTypeInternal;
extern PaddingConfigDefaultTypeInternal _PaddingConfig_default_instance_;
class PaddingConfig_PaddingConfigDimension;
class PaddingConfig_PaddingConfigDimensionDefaultTypeInternal;
extern PaddingConfig_PaddingConfigDimensionDefaultTypeInternal _PaddingConfig_PaddingConfigDimension_default_instance_;
class ProgramShape;
class ProgramShapeDefaultTypeInternal;
extern ProgramShapeDefaultTypeInternal _ProgramShape_default_instance_;
class Shape;
class ShapeDefaultTypeInternal;
extern ShapeDefaultTypeInternal _Shape_default_instance_;
class Window;
class WindowDefaultTypeInternal;
extern WindowDefaultTypeInternal _Window_default_instance_;
class WindowDimension;
class WindowDimensionDefaultTypeInternal;
extern WindowDimensionDefaultTypeInternal _WindowDimension_default_instance_;
}  // namespace xla
namespace google {
namespace protobuf {
template<> ::xla::ChannelHandle* Arena::CreateMessage< ::xla::ChannelHandle>(Arena*);
template<> ::xla::ComputationStats* Arena::CreateMessage< ::xla::ComputationStats>(Arena*);
template<> ::xla::ConvolutionDimensionNumbers* Arena::CreateMessage< ::xla::ConvolutionDimensionNumbers>(Arena*);
template<> ::xla::DeviceAssignmentProto* Arena::CreateMessage< ::xla::DeviceAssignmentProto>(Arena*);
template<> ::xla::DeviceAssignmentProto_ComputationDevice* Arena::CreateMessage< ::xla::DeviceAssignmentProto_ComputationDevice>(Arena*);
template<> ::xla::DeviceHandle* Arena::CreateMessage< ::xla::DeviceHandle>(Arena*);
template<> ::xla::DotDimensionNumbers* Arena::CreateMessage< ::xla::DotDimensionNumbers>(Arena*);
template<> ::xla::ExecutionHandle* Arena::CreateMessage< ::xla::ExecutionHandle>(Arena*);
template<> ::xla::ExecutionProfile* Arena::CreateMessage< ::xla::ExecutionProfile>(Arena*);
template<> ::xla::GatherDimensionNumbers* Arena::CreateMessage< ::xla::GatherDimensionNumbers>(Arena*);
template<> ::xla::GlobalDataHandle* Arena::CreateMessage< ::xla::GlobalDataHandle>(Arena*);
template<> ::xla::Layout* Arena::CreateMessage< ::xla::Layout>(Arena*);
template<> ::xla::LiteralProto* Arena::CreateMessage< ::xla::LiteralProto>(Arena*);
template<> ::xla::OpMetadata* Arena::CreateMessage< ::xla::OpMetadata>(Arena*);
template<> ::xla::OpSharding* Arena::CreateMessage< ::xla::OpSharding>(Arena*);
template<> ::xla::PaddingConfig* Arena::CreateMessage< ::xla::PaddingConfig>(Arena*);
template<> ::xla::PaddingConfig_PaddingConfigDimension* Arena::CreateMessage< ::xla::PaddingConfig_PaddingConfigDimension>(Arena*);
template<> ::xla::ProgramShape* Arena::CreateMessage< ::xla::ProgramShape>(Arena*);
template<> ::xla::Shape* Arena::CreateMessage< ::xla::Shape>(Arena*);
template<> ::xla::Window* Arena::CreateMessage< ::xla::Window>(Arena*);
template<> ::xla::WindowDimension* Arena::CreateMessage< ::xla::WindowDimension>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace xla {

enum OpSharding_Type {
  OpSharding_Type_REPLICATED = 0,
  OpSharding_Type_MAXIMAL = 1,
  OpSharding_Type_TUPLE = 2,
  OpSharding_Type_OTHER = 3,
  OpSharding_Type_OpSharding_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpSharding_Type_OpSharding_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpSharding_Type_IsValid(int value);
const OpSharding_Type OpSharding_Type_Type_MIN = OpSharding_Type_REPLICATED;
const OpSharding_Type OpSharding_Type_Type_MAX = OpSharding_Type_OTHER;
const int OpSharding_Type_Type_ARRAYSIZE = OpSharding_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpSharding_Type_descriptor();
inline const ::std::string& OpSharding_Type_Name(OpSharding_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpSharding_Type_descriptor(), value);
}
inline bool OpSharding_Type_Parse(
    const ::std::string& name, OpSharding_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpSharding_Type>(
    OpSharding_Type_descriptor(), name, value);
}
enum PrimitiveType {
  PRIMITIVE_TYPE_INVALID = 0,
  PRED = 1,
  S8 = 2,
  S16 = 3,
  S32 = 4,
  S64 = 5,
  U8 = 6,
  U16 = 7,
  U32 = 8,
  U64 = 9,
  F16 = 10,
  F32 = 11,
  BF16 = 16,
  F64 = 12,
  C64 = 15,
  TUPLE = 13,
  OPAQUE = 14,
  TOKEN = 17,
  PrimitiveType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PrimitiveType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PrimitiveType_IsValid(int value);
const PrimitiveType PrimitiveType_MIN = PRIMITIVE_TYPE_INVALID;
const PrimitiveType PrimitiveType_MAX = TOKEN;
const int PrimitiveType_ARRAYSIZE = PrimitiveType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PrimitiveType_descriptor();
inline const ::std::string& PrimitiveType_Name(PrimitiveType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PrimitiveType_descriptor(), value);
}
inline bool PrimitiveType_Parse(
    const ::std::string& name, PrimitiveType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PrimitiveType>(
    PrimitiveType_descriptor(), name, value);
}
enum PaddingValue {
  INVALID_PAD = 0,
  ZERO_PAD = 1,
  ONE_PAD = 2,
  LOWEST_PAD = 3,
  HIGHEST_PAD = 4,
  UNKNOWN_PAD = 5,
  PaddingValue_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PaddingValue_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PaddingValue_IsValid(int value);
const PaddingValue PaddingValue_MIN = INVALID_PAD;
const PaddingValue PaddingValue_MAX = UNKNOWN_PAD;
const int PaddingValue_ARRAYSIZE = PaddingValue_MAX + 1;

const ::google::protobuf::EnumDescriptor* PaddingValue_descriptor();
inline const ::std::string& PaddingValue_Name(PaddingValue value) {
  return ::google::protobuf::internal::NameOfEnum(
    PaddingValue_descriptor(), value);
}
inline bool PaddingValue_Parse(
    const ::std::string& name, PaddingValue* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PaddingValue>(
    PaddingValue_descriptor(), name, value);
}
enum Format {
  INVALID_FORMAT = 0,
  DENSE = 1,
  SPARSE = 2,
  Format_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Format_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Format_IsValid(int value);
const Format Format_MIN = INVALID_FORMAT;
const Format Format_MAX = SPARSE;
const int Format_ARRAYSIZE = Format_MAX + 1;

const ::google::protobuf::EnumDescriptor* Format_descriptor();
inline const ::std::string& Format_Name(Format value) {
  return ::google::protobuf::internal::NameOfEnum(
    Format_descriptor(), value);
}
inline bool Format_Parse(
    const ::std::string& name, Format* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Format>(
    Format_descriptor(), name, value);
}
enum FftType {
  FFT = 0,
  IFFT = 1,
  RFFT = 2,
  IRFFT = 3,
  FftType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FftType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FftType_IsValid(int value);
const FftType FftType_MIN = FFT;
const FftType FftType_MAX = IRFFT;
const int FftType_ARRAYSIZE = FftType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FftType_descriptor();
inline const ::std::string& FftType_Name(FftType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FftType_descriptor(), value);
}
inline bool FftType_Parse(
    const ::std::string& name, FftType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FftType>(
    FftType_descriptor(), name, value);
}
enum RandomDistribution {
  RNG_INVALID = 0,
  RNG_UNIFORM = 1,
  RNG_NORMAL = 2,
  RandomDistribution_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RandomDistribution_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RandomDistribution_IsValid(int value);
const RandomDistribution RandomDistribution_MIN = RNG_INVALID;
const RandomDistribution RandomDistribution_MAX = RNG_NORMAL;
const int RandomDistribution_ARRAYSIZE = RandomDistribution_MAX + 1;

const ::google::protobuf::EnumDescriptor* RandomDistribution_descriptor();
inline const ::std::string& RandomDistribution_Name(RandomDistribution value) {
  return ::google::protobuf::internal::NameOfEnum(
    RandomDistribution_descriptor(), value);
}
inline bool RandomDistribution_Parse(
    const ::std::string& name, RandomDistribution* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RandomDistribution>(
    RandomDistribution_descriptor(), name, value);
}
// ===================================================================

class PaddingConfig_PaddingConfigDimension : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.PaddingConfig.PaddingConfigDimension) */ {
 public:
  PaddingConfig_PaddingConfigDimension();
  virtual ~PaddingConfig_PaddingConfigDimension();

  PaddingConfig_PaddingConfigDimension(const PaddingConfig_PaddingConfigDimension& from);

  inline PaddingConfig_PaddingConfigDimension& operator=(const PaddingConfig_PaddingConfigDimension& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PaddingConfig_PaddingConfigDimension(PaddingConfig_PaddingConfigDimension&& from) noexcept
    : PaddingConfig_PaddingConfigDimension() {
    *this = ::std::move(from);
  }

  inline PaddingConfig_PaddingConfigDimension& operator=(PaddingConfig_PaddingConfigDimension&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const PaddingConfig_PaddingConfigDimension& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PaddingConfig_PaddingConfigDimension* internal_default_instance() {
    return reinterpret_cast<const PaddingConfig_PaddingConfigDimension*>(
               &_PaddingConfig_PaddingConfigDimension_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(PaddingConfig_PaddingConfigDimension* other);
  void Swap(PaddingConfig_PaddingConfigDimension* other);
  friend void swap(PaddingConfig_PaddingConfigDimension& a, PaddingConfig_PaddingConfigDimension& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PaddingConfig_PaddingConfigDimension* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<PaddingConfig_PaddingConfigDimension>(NULL);
  }

  PaddingConfig_PaddingConfigDimension* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<PaddingConfig_PaddingConfigDimension>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PaddingConfig_PaddingConfigDimension& from);
  void MergeFrom(const PaddingConfig_PaddingConfigDimension& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PaddingConfig_PaddingConfigDimension* other);
  protected:
  explicit PaddingConfig_PaddingConfigDimension(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 edge_padding_low = 1;
  void clear_edge_padding_low();
  static const int kEdgePaddingLowFieldNumber = 1;
  ::google::protobuf::int64 edge_padding_low() const;
  void set_edge_padding_low(::google::protobuf::int64 value);

  // int64 edge_padding_high = 2;
  void clear_edge_padding_high();
  static const int kEdgePaddingHighFieldNumber = 2;
  ::google::protobuf::int64 edge_padding_high() const;
  void set_edge_padding_high(::google::protobuf::int64 value);

  // int64 interior_padding = 3;
  void clear_interior_padding();
  static const int kInteriorPaddingFieldNumber = 3;
  ::google::protobuf::int64 interior_padding() const;
  void set_interior_padding(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:xla.PaddingConfig.PaddingConfigDimension)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int64 edge_padding_low_;
  ::google::protobuf::int64 edge_padding_high_;
  ::google::protobuf::int64 interior_padding_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsPaddingConfig_PaddingConfigDimensionImpl();
};
// -------------------------------------------------------------------

class PaddingConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.PaddingConfig) */ {
 public:
  PaddingConfig();
  virtual ~PaddingConfig();

  PaddingConfig(const PaddingConfig& from);

  inline PaddingConfig& operator=(const PaddingConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PaddingConfig(PaddingConfig&& from) noexcept
    : PaddingConfig() {
    *this = ::std::move(from);
  }

  inline PaddingConfig& operator=(PaddingConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const PaddingConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PaddingConfig* internal_default_instance() {
    return reinterpret_cast<const PaddingConfig*>(
               &_PaddingConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(PaddingConfig* other);
  void Swap(PaddingConfig* other);
  friend void swap(PaddingConfig& a, PaddingConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PaddingConfig* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<PaddingConfig>(NULL);
  }

  PaddingConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<PaddingConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PaddingConfig& from);
  void MergeFrom(const PaddingConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PaddingConfig* other);
  protected:
  explicit PaddingConfig(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PaddingConfig_PaddingConfigDimension PaddingConfigDimension;

  // accessors -------------------------------------------------------

  // repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;
  int dimensions_size() const;
  void clear_dimensions();
  static const int kDimensionsFieldNumber = 1;
  ::xla::PaddingConfig_PaddingConfigDimension* mutable_dimensions(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::PaddingConfig_PaddingConfigDimension >*
      mutable_dimensions();
  const ::xla::PaddingConfig_PaddingConfigDimension& dimensions(int index) const;
  ::xla::PaddingConfig_PaddingConfigDimension* add_dimensions();
  const ::google::protobuf::RepeatedPtrField< ::xla::PaddingConfig_PaddingConfigDimension >&
      dimensions() const;

  // @@protoc_insertion_point(class_scope:xla.PaddingConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::xla::PaddingConfig_PaddingConfigDimension > dimensions_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsPaddingConfigImpl();
};
// -------------------------------------------------------------------

class Layout : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.Layout) */ {
 public:
  Layout();
  virtual ~Layout();

  Layout(const Layout& from);

  inline Layout& operator=(const Layout& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Layout(Layout&& from) noexcept
    : Layout() {
    *this = ::std::move(from);
  }

  inline Layout& operator=(Layout&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Layout& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Layout* internal_default_instance() {
    return reinterpret_cast<const Layout*>(
               &_Layout_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(Layout* other);
  void Swap(Layout* other);
  friend void swap(Layout& a, Layout& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Layout* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<Layout>(NULL);
  }

  Layout* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<Layout>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Layout& from);
  void MergeFrom(const Layout& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Layout* other);
  protected:
  explicit Layout(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 minor_to_major = 1;
  int minor_to_major_size() const;
  void clear_minor_to_major();
  static const int kMinorToMajorFieldNumber = 1;
  ::google::protobuf::int64 minor_to_major(int index) const;
  void set_minor_to_major(int index, ::google::protobuf::int64 value);
  void add_minor_to_major(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      minor_to_major() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_minor_to_major();

  // repeated int64 padded_dimensions = 2;
  int padded_dimensions_size() const;
  void clear_padded_dimensions();
  static const int kPaddedDimensionsFieldNumber = 2;
  ::google::protobuf::int64 padded_dimensions(int index) const;
  void set_padded_dimensions(int index, ::google::protobuf::int64 value);
  void add_padded_dimensions(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      padded_dimensions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_padded_dimensions();

  // .xla.PaddingValue padding_value = 3;
  void clear_padding_value();
  static const int kPaddingValueFieldNumber = 3;
  ::xla::PaddingValue padding_value() const;
  void set_padding_value(::xla::PaddingValue value);

  // .xla.Format format = 4;
  void clear_format();
  static const int kFormatFieldNumber = 4;
  ::xla::Format format() const;
  void set_format(::xla::Format value);

  // int64 max_sparse_elements = 5;
  void clear_max_sparse_elements();
  static const int kMaxSparseElementsFieldNumber = 5;
  ::google::protobuf::int64 max_sparse_elements() const;
  void set_max_sparse_elements(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:xla.Layout)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > minor_to_major_;
  mutable int _minor_to_major_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > padded_dimensions_;
  mutable int _padded_dimensions_cached_byte_size_;
  int padding_value_;
  int format_;
  ::google::protobuf::int64 max_sparse_elements_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsLayoutImpl();
};
// -------------------------------------------------------------------

class Shape : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.Shape) */ {
 public:
  Shape();
  virtual ~Shape();

  Shape(const Shape& from);

  inline Shape& operator=(const Shape& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Shape(Shape&& from) noexcept
    : Shape() {
    *this = ::std::move(from);
  }

  inline Shape& operator=(Shape&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Shape& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Shape* internal_default_instance() {
    return reinterpret_cast<const Shape*>(
               &_Shape_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(Shape* other);
  void Swap(Shape* other);
  friend void swap(Shape& a, Shape& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Shape* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<Shape>(NULL);
  }

  Shape* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<Shape>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Shape& from);
  void MergeFrom(const Shape& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Shape* other);
  protected:
  explicit Shape(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 dimensions = 3;
  int dimensions_size() const;
  void clear_dimensions();
  static const int kDimensionsFieldNumber = 3;
  ::google::protobuf::int64 dimensions(int index) const;
  void set_dimensions(int index, ::google::protobuf::int64 value);
  void add_dimensions(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      dimensions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_dimensions();

  // repeated .xla.Shape tuple_shapes = 4;
  int tuple_shapes_size() const;
  void clear_tuple_shapes();
  static const int kTupleShapesFieldNumber = 4;
  ::xla::Shape* mutable_tuple_shapes(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::Shape >*
      mutable_tuple_shapes();
  const ::xla::Shape& tuple_shapes(int index) const;
  ::xla::Shape* add_tuple_shapes();
  const ::google::protobuf::RepeatedPtrField< ::xla::Shape >&
      tuple_shapes() const;

  // .xla.Layout layout = 5;
  bool has_layout() const;
  void clear_layout();
  static const int kLayoutFieldNumber = 5;
  const ::xla::Layout& layout() const;
  ::xla::Layout* release_layout();
  ::xla::Layout* mutable_layout();
  void set_allocated_layout(::xla::Layout* layout);
  void unsafe_arena_set_allocated_layout(
      ::xla::Layout* layout);
  ::xla::Layout* unsafe_arena_release_layout();

  // .xla.PrimitiveType element_type = 2;
  void clear_element_type();
  static const int kElementTypeFieldNumber = 2;
  ::xla::PrimitiveType element_type() const;
  void set_element_type(::xla::PrimitiveType value);

  // @@protoc_insertion_point(class_scope:xla.Shape)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > dimensions_;
  mutable int _dimensions_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::xla::Shape > tuple_shapes_;
  ::xla::Layout* layout_;
  int element_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsShapeImpl();
};
// -------------------------------------------------------------------

class ProgramShape : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ProgramShape) */ {
 public:
  ProgramShape();
  virtual ~ProgramShape();

  ProgramShape(const ProgramShape& from);

  inline ProgramShape& operator=(const ProgramShape& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProgramShape(ProgramShape&& from) noexcept
    : ProgramShape() {
    *this = ::std::move(from);
  }

  inline ProgramShape& operator=(ProgramShape&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProgramShape& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProgramShape* internal_default_instance() {
    return reinterpret_cast<const ProgramShape*>(
               &_ProgramShape_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(ProgramShape* other);
  void Swap(ProgramShape* other);
  friend void swap(ProgramShape& a, ProgramShape& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProgramShape* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<ProgramShape>(NULL);
  }

  ProgramShape* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<ProgramShape>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProgramShape& from);
  void MergeFrom(const ProgramShape& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProgramShape* other);
  protected:
  explicit ProgramShape(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xla.Shape parameters = 1;
  int parameters_size() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 1;
  ::xla::Shape* mutable_parameters(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::Shape >*
      mutable_parameters();
  const ::xla::Shape& parameters(int index) const;
  ::xla::Shape* add_parameters();
  const ::google::protobuf::RepeatedPtrField< ::xla::Shape >&
      parameters() const;

  // repeated string parameter_names = 3;
  int parameter_names_size() const;
  void clear_parameter_names();
  static const int kParameterNamesFieldNumber = 3;
  const ::std::string& parameter_names(int index) const;
  ::std::string* mutable_parameter_names(int index);
  void set_parameter_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_parameter_names(int index, ::std::string&& value);
  #endif
  void set_parameter_names(int index, const char* value);
  void set_parameter_names(int index, const char* value, size_t size);
  ::std::string* add_parameter_names();
  void add_parameter_names(const ::std::string& value);
  #if LANG_CXX11
  void add_parameter_names(::std::string&& value);
  #endif
  void add_parameter_names(const char* value);
  void add_parameter_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& parameter_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_parameter_names();

  // .xla.Shape result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  const ::xla::Shape& result() const;
  ::xla::Shape* release_result();
  ::xla::Shape* mutable_result();
  void set_allocated_result(::xla::Shape* result);
  void unsafe_arena_set_allocated_result(
      ::xla::Shape* result);
  ::xla::Shape* unsafe_arena_release_result();

  // @@protoc_insertion_point(class_scope:xla.ProgramShape)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::xla::Shape > parameters_;
  ::google::protobuf::RepeatedPtrField< ::std::string> parameter_names_;
  ::xla::Shape* result_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsProgramShapeImpl();
};
// -------------------------------------------------------------------

class ComputationStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ComputationStats) */ {
 public:
  ComputationStats();
  virtual ~ComputationStats();

  ComputationStats(const ComputationStats& from);

  inline ComputationStats& operator=(const ComputationStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComputationStats(ComputationStats&& from) noexcept
    : ComputationStats() {
    *this = ::std::move(from);
  }

  inline ComputationStats& operator=(ComputationStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComputationStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComputationStats* internal_default_instance() {
    return reinterpret_cast<const ComputationStats*>(
               &_ComputationStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(ComputationStats* other);
  void Swap(ComputationStats* other);
  friend void swap(ComputationStats& a, ComputationStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComputationStats* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<ComputationStats>(NULL);
  }

  ComputationStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<ComputationStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ComputationStats& from);
  void MergeFrom(const ComputationStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComputationStats* other);
  protected:
  explicit ComputationStats(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double flop_count = 1;
  void clear_flop_count();
  static const int kFlopCountFieldNumber = 1;
  double flop_count() const;
  void set_flop_count(double value);

  // double transcendental_count = 2;
  void clear_transcendental_count();
  static const int kTranscendentalCountFieldNumber = 2;
  double transcendental_count() const;
  void set_transcendental_count(double value);

  // @@protoc_insertion_point(class_scope:xla.ComputationStats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double flop_count_;
  double transcendental_count_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsComputationStatsImpl();
};
// -------------------------------------------------------------------

class OpMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.OpMetadata) */ {
 public:
  OpMetadata();
  virtual ~OpMetadata();

  OpMetadata(const OpMetadata& from);

  inline OpMetadata& operator=(const OpMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpMetadata(OpMetadata&& from) noexcept
    : OpMetadata() {
    *this = ::std::move(from);
  }

  inline OpMetadata& operator=(OpMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpMetadata* internal_default_instance() {
    return reinterpret_cast<const OpMetadata*>(
               &_OpMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(OpMetadata* other);
  void Swap(OpMetadata* other);
  friend void swap(OpMetadata& a, OpMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpMetadata* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<OpMetadata>(NULL);
  }

  OpMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<OpMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpMetadata& from);
  void MergeFrom(const OpMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpMetadata* other);
  protected:
  explicit OpMetadata(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string op_type = 1;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  const ::std::string& op_type() const;
  void set_op_type(const ::std::string& value);
  #if LANG_CXX11
  void set_op_type(::std::string&& value);
  #endif
  void set_op_type(const char* value);
  void set_op_type(const char* value, size_t size);
  ::std::string* mutable_op_type();
  ::std::string* release_op_type();
  void set_allocated_op_type(::std::string* op_type);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_op_type();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_op_type(
      ::std::string* op_type);

  // string op_name = 2;
  void clear_op_name();
  static const int kOpNameFieldNumber = 2;
  const ::std::string& op_name() const;
  void set_op_name(const ::std::string& value);
  #if LANG_CXX11
  void set_op_name(::std::string&& value);
  #endif
  void set_op_name(const char* value);
  void set_op_name(const char* value, size_t size);
  ::std::string* mutable_op_name();
  ::std::string* release_op_name();
  void set_allocated_op_name(::std::string* op_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_op_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_op_name(
      ::std::string* op_name);

  // string source_file = 3;
  void clear_source_file();
  static const int kSourceFileFieldNumber = 3;
  const ::std::string& source_file() const;
  void set_source_file(const ::std::string& value);
  #if LANG_CXX11
  void set_source_file(::std::string&& value);
  #endif
  void set_source_file(const char* value);
  void set_source_file(const char* value, size_t size);
  ::std::string* mutable_source_file();
  ::std::string* release_source_file();
  void set_allocated_source_file(::std::string* source_file);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_source_file();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_source_file(
      ::std::string* source_file);

  // int32 source_line = 4;
  void clear_source_line();
  static const int kSourceLineFieldNumber = 4;
  ::google::protobuf::int32 source_line() const;
  void set_source_line(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xla.OpMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr op_type_;
  ::google::protobuf::internal::ArenaStringPtr op_name_;
  ::google::protobuf::internal::ArenaStringPtr source_file_;
  ::google::protobuf::int32 source_line_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsOpMetadataImpl();
};
// -------------------------------------------------------------------

class ExecutionProfile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ExecutionProfile) */ {
 public:
  ExecutionProfile();
  virtual ~ExecutionProfile();

  ExecutionProfile(const ExecutionProfile& from);

  inline ExecutionProfile& operator=(const ExecutionProfile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecutionProfile(ExecutionProfile&& from) noexcept
    : ExecutionProfile() {
    *this = ::std::move(from);
  }

  inline ExecutionProfile& operator=(ExecutionProfile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecutionProfile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecutionProfile* internal_default_instance() {
    return reinterpret_cast<const ExecutionProfile*>(
               &_ExecutionProfile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(ExecutionProfile* other);
  void Swap(ExecutionProfile* other);
  friend void swap(ExecutionProfile& a, ExecutionProfile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecutionProfile* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<ExecutionProfile>(NULL);
  }

  ExecutionProfile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<ExecutionProfile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecutionProfile& from);
  void MergeFrom(const ExecutionProfile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecutionProfile* other);
  protected:
  explicit ExecutionProfile(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 compile_time_ms = 2;
  void clear_compile_time_ms();
  static const int kCompileTimeMsFieldNumber = 2;
  ::google::protobuf::int64 compile_time_ms() const;
  void set_compile_time_ms(::google::protobuf::int64 value);

  // int64 compute_cycle_count = 3;
  void clear_compute_cycle_count();
  static const int kComputeCycleCountFieldNumber = 3;
  ::google::protobuf::int64 compute_cycle_count() const;
  void set_compute_cycle_count(::google::protobuf::int64 value);

  // int64 compute_time_ns = 4;
  void clear_compute_time_ns();
  static const int kComputeTimeNsFieldNumber = 4;
  ::google::protobuf::int64 compute_time_ns() const;
  void set_compute_time_ns(::google::protobuf::int64 value);

  // int64 compute_and_transfer_time_ns = 5;
  void clear_compute_and_transfer_time_ns();
  static const int kComputeAndTransferTimeNsFieldNumber = 5;
  ::google::protobuf::int64 compute_and_transfer_time_ns() const;
  void set_compute_and_transfer_time_ns(::google::protobuf::int64 value);

  // bool compilation_cache_hit = 1;
  void clear_compilation_cache_hit();
  static const int kCompilationCacheHitFieldNumber = 1;
  bool compilation_cache_hit() const;
  void set_compilation_cache_hit(bool value);

  // @@protoc_insertion_point(class_scope:xla.ExecutionProfile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int64 compile_time_ms_;
  ::google::protobuf::int64 compute_cycle_count_;
  ::google::protobuf::int64 compute_time_ns_;
  ::google::protobuf::int64 compute_and_transfer_time_ns_;
  bool compilation_cache_hit_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsExecutionProfileImpl();
};
// -------------------------------------------------------------------

class ExecutionHandle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ExecutionHandle) */ {
 public:
  ExecutionHandle();
  virtual ~ExecutionHandle();

  ExecutionHandle(const ExecutionHandle& from);

  inline ExecutionHandle& operator=(const ExecutionHandle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecutionHandle(ExecutionHandle&& from) noexcept
    : ExecutionHandle() {
    *this = ::std::move(from);
  }

  inline ExecutionHandle& operator=(ExecutionHandle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecutionHandle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecutionHandle* internal_default_instance() {
    return reinterpret_cast<const ExecutionHandle*>(
               &_ExecutionHandle_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(ExecutionHandle* other);
  void Swap(ExecutionHandle* other);
  friend void swap(ExecutionHandle& a, ExecutionHandle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecutionHandle* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<ExecutionHandle>(NULL);
  }

  ExecutionHandle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<ExecutionHandle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecutionHandle& from);
  void MergeFrom(const ExecutionHandle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecutionHandle* other);
  protected:
  explicit ExecutionHandle(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 handle = 1;
  void clear_handle();
  static const int kHandleFieldNumber = 1;
  ::google::protobuf::int64 handle() const;
  void set_handle(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:xla.ExecutionHandle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int64 handle_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsExecutionHandleImpl();
};
// -------------------------------------------------------------------

class GlobalDataHandle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.GlobalDataHandle) */ {
 public:
  GlobalDataHandle();
  virtual ~GlobalDataHandle();

  GlobalDataHandle(const GlobalDataHandle& from);

  inline GlobalDataHandle& operator=(const GlobalDataHandle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GlobalDataHandle(GlobalDataHandle&& from) noexcept
    : GlobalDataHandle() {
    *this = ::std::move(from);
  }

  inline GlobalDataHandle& operator=(GlobalDataHandle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalDataHandle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GlobalDataHandle* internal_default_instance() {
    return reinterpret_cast<const GlobalDataHandle*>(
               &_GlobalDataHandle_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(GlobalDataHandle* other);
  void Swap(GlobalDataHandle* other);
  friend void swap(GlobalDataHandle& a, GlobalDataHandle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GlobalDataHandle* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<GlobalDataHandle>(NULL);
  }

  GlobalDataHandle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<GlobalDataHandle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GlobalDataHandle& from);
  void MergeFrom(const GlobalDataHandle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GlobalDataHandle* other);
  protected:
  explicit GlobalDataHandle(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 handle = 1;
  void clear_handle();
  static const int kHandleFieldNumber = 1;
  ::google::protobuf::int64 handle() const;
  void set_handle(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:xla.GlobalDataHandle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int64 handle_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsGlobalDataHandleImpl();
};
// -------------------------------------------------------------------

class DeviceHandle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.DeviceHandle) */ {
 public:
  DeviceHandle();
  virtual ~DeviceHandle();

  DeviceHandle(const DeviceHandle& from);

  inline DeviceHandle& operator=(const DeviceHandle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeviceHandle(DeviceHandle&& from) noexcept
    : DeviceHandle() {
    *this = ::std::move(from);
  }

  inline DeviceHandle& operator=(DeviceHandle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceHandle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceHandle* internal_default_instance() {
    return reinterpret_cast<const DeviceHandle*>(
               &_DeviceHandle_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(DeviceHandle* other);
  void Swap(DeviceHandle* other);
  friend void swap(DeviceHandle& a, DeviceHandle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeviceHandle* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<DeviceHandle>(NULL);
  }

  DeviceHandle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<DeviceHandle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeviceHandle& from);
  void MergeFrom(const DeviceHandle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeviceHandle* other);
  protected:
  explicit DeviceHandle(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 handle = 1;
  void clear_handle();
  static const int kHandleFieldNumber = 1;
  ::google::protobuf::int64 handle() const;
  void set_handle(::google::protobuf::int64 value);

  // int64 device_count = 2;
  void clear_device_count();
  static const int kDeviceCountFieldNumber = 2;
  ::google::protobuf::int64 device_count() const;
  void set_device_count(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:xla.DeviceHandle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int64 handle_;
  ::google::protobuf::int64 device_count_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsDeviceHandleImpl();
};
// -------------------------------------------------------------------

class ChannelHandle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ChannelHandle) */ {
 public:
  ChannelHandle();
  virtual ~ChannelHandle();

  ChannelHandle(const ChannelHandle& from);

  inline ChannelHandle& operator=(const ChannelHandle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChannelHandle(ChannelHandle&& from) noexcept
    : ChannelHandle() {
    *this = ::std::move(from);
  }

  inline ChannelHandle& operator=(ChannelHandle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChannelHandle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChannelHandle* internal_default_instance() {
    return reinterpret_cast<const ChannelHandle*>(
               &_ChannelHandle_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(ChannelHandle* other);
  void Swap(ChannelHandle* other);
  friend void swap(ChannelHandle& a, ChannelHandle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChannelHandle* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<ChannelHandle>(NULL);
  }

  ChannelHandle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<ChannelHandle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChannelHandle& from);
  void MergeFrom(const ChannelHandle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChannelHandle* other);
  protected:
  explicit ChannelHandle(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 handle = 1;
  void clear_handle();
  static const int kHandleFieldNumber = 1;
  ::google::protobuf::int64 handle() const;
  void set_handle(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:xla.ChannelHandle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int64 handle_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsChannelHandleImpl();
};
// -------------------------------------------------------------------

class DeviceAssignmentProto_ComputationDevice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.DeviceAssignmentProto.ComputationDevice) */ {
 public:
  DeviceAssignmentProto_ComputationDevice();
  virtual ~DeviceAssignmentProto_ComputationDevice();

  DeviceAssignmentProto_ComputationDevice(const DeviceAssignmentProto_ComputationDevice& from);

  inline DeviceAssignmentProto_ComputationDevice& operator=(const DeviceAssignmentProto_ComputationDevice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeviceAssignmentProto_ComputationDevice(DeviceAssignmentProto_ComputationDevice&& from) noexcept
    : DeviceAssignmentProto_ComputationDevice() {
    *this = ::std::move(from);
  }

  inline DeviceAssignmentProto_ComputationDevice& operator=(DeviceAssignmentProto_ComputationDevice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceAssignmentProto_ComputationDevice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceAssignmentProto_ComputationDevice* internal_default_instance() {
    return reinterpret_cast<const DeviceAssignmentProto_ComputationDevice*>(
               &_DeviceAssignmentProto_ComputationDevice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(DeviceAssignmentProto_ComputationDevice* other);
  void Swap(DeviceAssignmentProto_ComputationDevice* other);
  friend void swap(DeviceAssignmentProto_ComputationDevice& a, DeviceAssignmentProto_ComputationDevice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeviceAssignmentProto_ComputationDevice* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<DeviceAssignmentProto_ComputationDevice>(NULL);
  }

  DeviceAssignmentProto_ComputationDevice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<DeviceAssignmentProto_ComputationDevice>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeviceAssignmentProto_ComputationDevice& from);
  void MergeFrom(const DeviceAssignmentProto_ComputationDevice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeviceAssignmentProto_ComputationDevice* other);
  protected:
  explicit DeviceAssignmentProto_ComputationDevice(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 replica_device_ids = 1;
  int replica_device_ids_size() const;
  void clear_replica_device_ids();
  static const int kReplicaDeviceIdsFieldNumber = 1;
  ::google::protobuf::int32 replica_device_ids(int index) const;
  void set_replica_device_ids(int index, ::google::protobuf::int32 value);
  void add_replica_device_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      replica_device_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_replica_device_ids();

  // @@protoc_insertion_point(class_scope:xla.DeviceAssignmentProto.ComputationDevice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > replica_device_ids_;
  mutable int _replica_device_ids_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsDeviceAssignmentProto_ComputationDeviceImpl();
};
// -------------------------------------------------------------------

class DeviceAssignmentProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.DeviceAssignmentProto) */ {
 public:
  DeviceAssignmentProto();
  virtual ~DeviceAssignmentProto();

  DeviceAssignmentProto(const DeviceAssignmentProto& from);

  inline DeviceAssignmentProto& operator=(const DeviceAssignmentProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeviceAssignmentProto(DeviceAssignmentProto&& from) noexcept
    : DeviceAssignmentProto() {
    *this = ::std::move(from);
  }

  inline DeviceAssignmentProto& operator=(DeviceAssignmentProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceAssignmentProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceAssignmentProto* internal_default_instance() {
    return reinterpret_cast<const DeviceAssignmentProto*>(
               &_DeviceAssignmentProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(DeviceAssignmentProto* other);
  void Swap(DeviceAssignmentProto* other);
  friend void swap(DeviceAssignmentProto& a, DeviceAssignmentProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeviceAssignmentProto* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<DeviceAssignmentProto>(NULL);
  }

  DeviceAssignmentProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<DeviceAssignmentProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeviceAssignmentProto& from);
  void MergeFrom(const DeviceAssignmentProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeviceAssignmentProto* other);
  protected:
  explicit DeviceAssignmentProto(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DeviceAssignmentProto_ComputationDevice ComputationDevice;

  // accessors -------------------------------------------------------

  // repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;
  int computation_devices_size() const;
  void clear_computation_devices();
  static const int kComputationDevicesFieldNumber = 3;
  ::xla::DeviceAssignmentProto_ComputationDevice* mutable_computation_devices(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::DeviceAssignmentProto_ComputationDevice >*
      mutable_computation_devices();
  const ::xla::DeviceAssignmentProto_ComputationDevice& computation_devices(int index) const;
  ::xla::DeviceAssignmentProto_ComputationDevice* add_computation_devices();
  const ::google::protobuf::RepeatedPtrField< ::xla::DeviceAssignmentProto_ComputationDevice >&
      computation_devices() const;

  // int32 replica_count = 1;
  void clear_replica_count();
  static const int kReplicaCountFieldNumber = 1;
  ::google::protobuf::int32 replica_count() const;
  void set_replica_count(::google::protobuf::int32 value);

  // int32 computation_count = 2;
  void clear_computation_count();
  static const int kComputationCountFieldNumber = 2;
  ::google::protobuf::int32 computation_count() const;
  void set_computation_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:xla.DeviceAssignmentProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::xla::DeviceAssignmentProto_ComputationDevice > computation_devices_;
  ::google::protobuf::int32 replica_count_;
  ::google::protobuf::int32 computation_count_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsDeviceAssignmentProtoImpl();
};
// -------------------------------------------------------------------

class LiteralProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.LiteralProto) */ {
 public:
  LiteralProto();
  virtual ~LiteralProto();

  LiteralProto(const LiteralProto& from);

  inline LiteralProto& operator=(const LiteralProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LiteralProto(LiteralProto&& from) noexcept
    : LiteralProto() {
    *this = ::std::move(from);
  }

  inline LiteralProto& operator=(LiteralProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const LiteralProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LiteralProto* internal_default_instance() {
    return reinterpret_cast<const LiteralProto*>(
               &_LiteralProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void UnsafeArenaSwap(LiteralProto* other);
  void Swap(LiteralProto* other);
  friend void swap(LiteralProto& a, LiteralProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LiteralProto* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<LiteralProto>(NULL);
  }

  LiteralProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<LiteralProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LiteralProto& from);
  void MergeFrom(const LiteralProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LiteralProto* other);
  protected:
  explicit LiteralProto(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool preds = 2;
  int preds_size() const;
  void clear_preds();
  static const int kPredsFieldNumber = 2;
  bool preds(int index) const;
  void set_preds(int index, bool value);
  void add_preds(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      preds() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_preds();

  // repeated int32 s32s = 4;
  int s32s_size() const;
  void clear_s32s();
  static const int kS32SFieldNumber = 4;
  ::google::protobuf::int32 s32s(int index) const;
  void set_s32s(int index, ::google::protobuf::int32 value);
  void add_s32s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      s32s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_s32s();

  // repeated int64 s64s = 5;
  int s64s_size() const;
  void clear_s64s();
  static const int kS64SFieldNumber = 5;
  ::google::protobuf::int64 s64s(int index) const;
  void set_s64s(int index, ::google::protobuf::int64 value);
  void add_s64s(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      s64s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_s64s();

  // repeated uint32 u32s = 6;
  int u32s_size() const;
  void clear_u32s();
  static const int kU32SFieldNumber = 6;
  ::google::protobuf::uint32 u32s(int index) const;
  void set_u32s(int index, ::google::protobuf::uint32 value);
  void add_u32s(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      u32s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_u32s();

  // repeated uint64 u64s = 7;
  int u64s_size() const;
  void clear_u64s();
  static const int kU64SFieldNumber = 7;
  ::google::protobuf::uint64 u64s(int index) const;
  void set_u64s(int index, ::google::protobuf::uint64 value);
  void add_u64s(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      u64s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_u64s();

  // repeated float f32s = 8;
  int f32s_size() const;
  void clear_f32s();
  static const int kF32SFieldNumber = 8;
  float f32s(int index) const;
  void set_f32s(int index, float value);
  void add_f32s(float value);
  const ::google::protobuf::RepeatedField< float >&
      f32s() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_f32s();

  // repeated double f64s = 9;
  int f64s_size() const;
  void clear_f64s();
  static const int kF64SFieldNumber = 9;
  double f64s(int index) const;
  void set_f64s(int index, double value);
  void add_f64s(double value);
  const ::google::protobuf::RepeatedField< double >&
      f64s() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_f64s();

  // repeated .xla.LiteralProto tuple_literals = 10;
  int tuple_literals_size() const;
  void clear_tuple_literals();
  static const int kTupleLiteralsFieldNumber = 10;
  ::xla::LiteralProto* mutable_tuple_literals(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::LiteralProto >*
      mutable_tuple_literals();
  const ::xla::LiteralProto& tuple_literals(int index) const;
  ::xla::LiteralProto* add_tuple_literals();
  const ::google::protobuf::RepeatedPtrField< ::xla::LiteralProto >&
      tuple_literals() const;

  // repeated float c64s = 12;
  int c64s_size() const;
  void clear_c64s();
  static const int kC64SFieldNumber = 12;
  float c64s(int index) const;
  void set_c64s(int index, float value);
  void add_c64s(float value);
  const ::google::protobuf::RepeatedField< float >&
      c64s() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_c64s();

  // repeated int64 sparse_indices = 14;
  int sparse_indices_size() const;
  void clear_sparse_indices();
  static const int kSparseIndicesFieldNumber = 14;
  ::google::protobuf::int64 sparse_indices(int index) const;
  void set_sparse_indices(int index, ::google::protobuf::int64 value);
  void add_sparse_indices(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      sparse_indices() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_sparse_indices();

  // bytes u8s = 3;
  void clear_u8s();
  static const int kU8SFieldNumber = 3;
  const ::std::string& u8s() const;
  void set_u8s(const ::std::string& value);
  #if LANG_CXX11
  void set_u8s(::std::string&& value);
  #endif
  void set_u8s(const char* value);
  void set_u8s(const void* value, size_t size);
  ::std::string* mutable_u8s();
  ::std::string* release_u8s();
  void set_allocated_u8s(::std::string* u8s);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_u8s();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_u8s(
      ::std::string* u8s);

  // bytes f16s = 11;
  void clear_f16s();
  static const int kF16SFieldNumber = 11;
  const ::std::string& f16s() const;
  void set_f16s(const ::std::string& value);
  #if LANG_CXX11
  void set_f16s(::std::string&& value);
  #endif
  void set_f16s(const char* value);
  void set_f16s(const void* value, size_t size);
  ::std::string* mutable_f16s();
  ::std::string* release_f16s();
  void set_allocated_f16s(::std::string* f16s);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_f16s();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_f16s(
      ::std::string* f16s);

  // bytes bf16s = 13;
  void clear_bf16s();
  static const int kBf16SFieldNumber = 13;
  const ::std::string& bf16s() const;
  void set_bf16s(const ::std::string& value);
  #if LANG_CXX11
  void set_bf16s(::std::string&& value);
  #endif
  void set_bf16s(const char* value);
  void set_bf16s(const void* value, size_t size);
  ::std::string* mutable_bf16s();
  ::std::string* release_bf16s();
  void set_allocated_bf16s(::std::string* bf16s);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_bf16s();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_bf16s(
      ::std::string* bf16s);

  // .xla.Shape shape = 1;
  bool has_shape() const;
  void clear_shape();
  static const int kShapeFieldNumber = 1;
  const ::xla::Shape& shape() const;
  ::xla::Shape* release_shape();
  ::xla::Shape* mutable_shape();
  void set_allocated_shape(::xla::Shape* shape);
  void unsafe_arena_set_allocated_shape(
      ::xla::Shape* shape);
  ::xla::Shape* unsafe_arena_release_shape();

  // @@protoc_insertion_point(class_scope:xla.LiteralProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< bool > preds_;
  mutable int _preds_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > s32s_;
  mutable int _s32s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > s64s_;
  mutable int _s64s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > u32s_;
  mutable int _u32s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > u64s_;
  mutable int _u64s_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > f32s_;
  mutable int _f32s_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > f64s_;
  mutable int _f64s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::xla::LiteralProto > tuple_literals_;
  ::google::protobuf::RepeatedField< float > c64s_;
  mutable int _c64s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > sparse_indices_;
  mutable int _sparse_indices_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr u8s_;
  ::google::protobuf::internal::ArenaStringPtr f16s_;
  ::google::protobuf::internal::ArenaStringPtr bf16s_;
  ::xla::Shape* shape_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsLiteralProtoImpl();
};
// -------------------------------------------------------------------

class WindowDimension : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.WindowDimension) */ {
 public:
  WindowDimension();
  virtual ~WindowDimension();

  WindowDimension(const WindowDimension& from);

  inline WindowDimension& operator=(const WindowDimension& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WindowDimension(WindowDimension&& from) noexcept
    : WindowDimension() {
    *this = ::std::move(from);
  }

  inline WindowDimension& operator=(WindowDimension&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const WindowDimension& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WindowDimension* internal_default_instance() {
    return reinterpret_cast<const WindowDimension*>(
               &_WindowDimension_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(WindowDimension* other);
  void Swap(WindowDimension* other);
  friend void swap(WindowDimension& a, WindowDimension& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WindowDimension* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<WindowDimension>(NULL);
  }

  WindowDimension* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<WindowDimension>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WindowDimension& from);
  void MergeFrom(const WindowDimension& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WindowDimension* other);
  protected:
  explicit WindowDimension(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 size = 1;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // int64 stride = 2;
  void clear_stride();
  static const int kStrideFieldNumber = 2;
  ::google::protobuf::int64 stride() const;
  void set_stride(::google::protobuf::int64 value);

  // int64 padding_low = 3;
  void clear_padding_low();
  static const int kPaddingLowFieldNumber = 3;
  ::google::protobuf::int64 padding_low() const;
  void set_padding_low(::google::protobuf::int64 value);

  // int64 padding_high = 4;
  void clear_padding_high();
  static const int kPaddingHighFieldNumber = 4;
  ::google::protobuf::int64 padding_high() const;
  void set_padding_high(::google::protobuf::int64 value);

  // int64 window_dilation = 5;
  void clear_window_dilation();
  static const int kWindowDilationFieldNumber = 5;
  ::google::protobuf::int64 window_dilation() const;
  void set_window_dilation(::google::protobuf::int64 value);

  // int64 base_dilation = 6;
  void clear_base_dilation();
  static const int kBaseDilationFieldNumber = 6;
  ::google::protobuf::int64 base_dilation() const;
  void set_base_dilation(::google::protobuf::int64 value);

  // bool window_reversal = 7;
  void clear_window_reversal();
  static const int kWindowReversalFieldNumber = 7;
  bool window_reversal() const;
  void set_window_reversal(bool value);

  // @@protoc_insertion_point(class_scope:xla.WindowDimension)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int64 stride_;
  ::google::protobuf::int64 padding_low_;
  ::google::protobuf::int64 padding_high_;
  ::google::protobuf::int64 window_dilation_;
  ::google::protobuf::int64 base_dilation_;
  bool window_reversal_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsWindowDimensionImpl();
};
// -------------------------------------------------------------------

class Window : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.Window) */ {
 public:
  Window();
  virtual ~Window();

  Window(const Window& from);

  inline Window& operator=(const Window& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Window(Window&& from) noexcept
    : Window() {
    *this = ::std::move(from);
  }

  inline Window& operator=(Window&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Window& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Window* internal_default_instance() {
    return reinterpret_cast<const Window*>(
               &_Window_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(Window* other);
  void Swap(Window* other);
  friend void swap(Window& a, Window& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Window* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<Window>(NULL);
  }

  Window* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<Window>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Window& from);
  void MergeFrom(const Window& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Window* other);
  protected:
  explicit Window(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xla.WindowDimension dimensions = 1;
  int dimensions_size() const;
  void clear_dimensions();
  static const int kDimensionsFieldNumber = 1;
  ::xla::WindowDimension* mutable_dimensions(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::WindowDimension >*
      mutable_dimensions();
  const ::xla::WindowDimension& dimensions(int index) const;
  ::xla::WindowDimension* add_dimensions();
  const ::google::protobuf::RepeatedPtrField< ::xla::WindowDimension >&
      dimensions() const;

  // @@protoc_insertion_point(class_scope:xla.Window)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::xla::WindowDimension > dimensions_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsWindowImpl();
};
// -------------------------------------------------------------------

class GatherDimensionNumbers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.GatherDimensionNumbers) */ {
 public:
  GatherDimensionNumbers();
  virtual ~GatherDimensionNumbers();

  GatherDimensionNumbers(const GatherDimensionNumbers& from);

  inline GatherDimensionNumbers& operator=(const GatherDimensionNumbers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GatherDimensionNumbers(GatherDimensionNumbers&& from) noexcept
    : GatherDimensionNumbers() {
    *this = ::std::move(from);
  }

  inline GatherDimensionNumbers& operator=(GatherDimensionNumbers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GatherDimensionNumbers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GatherDimensionNumbers* internal_default_instance() {
    return reinterpret_cast<const GatherDimensionNumbers*>(
               &_GatherDimensionNumbers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void UnsafeArenaSwap(GatherDimensionNumbers* other);
  void Swap(GatherDimensionNumbers* other);
  friend void swap(GatherDimensionNumbers& a, GatherDimensionNumbers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GatherDimensionNumbers* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<GatherDimensionNumbers>(NULL);
  }

  GatherDimensionNumbers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<GatherDimensionNumbers>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GatherDimensionNumbers& from);
  void MergeFrom(const GatherDimensionNumbers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GatherDimensionNumbers* other);
  protected:
  explicit GatherDimensionNumbers(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 output_window_dims = 1;
  int output_window_dims_size() const;
  void clear_output_window_dims();
  static const int kOutputWindowDimsFieldNumber = 1;
  ::google::protobuf::int64 output_window_dims(int index) const;
  void set_output_window_dims(int index, ::google::protobuf::int64 value);
  void add_output_window_dims(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      output_window_dims() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_output_window_dims();

  // repeated int64 elided_window_dims = 2;
  int elided_window_dims_size() const;
  void clear_elided_window_dims();
  static const int kElidedWindowDimsFieldNumber = 2;
  ::google::protobuf::int64 elided_window_dims(int index) const;
  void set_elided_window_dims(int index, ::google::protobuf::int64 value);
  void add_elided_window_dims(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      elided_window_dims() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_elided_window_dims();

  // repeated int64 gather_dims_to_operand_dims = 3;
  int gather_dims_to_operand_dims_size() const;
  void clear_gather_dims_to_operand_dims();
  static const int kGatherDimsToOperandDimsFieldNumber = 3;
  ::google::protobuf::int64 gather_dims_to_operand_dims(int index) const;
  void set_gather_dims_to_operand_dims(int index, ::google::protobuf::int64 value);
  void add_gather_dims_to_operand_dims(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      gather_dims_to_operand_dims() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_gather_dims_to_operand_dims();

  // int64 index_vector_dim = 4;
  void clear_index_vector_dim();
  static const int kIndexVectorDimFieldNumber = 4;
  ::google::protobuf::int64 index_vector_dim() const;
  void set_index_vector_dim(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:xla.GatherDimensionNumbers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > output_window_dims_;
  mutable int _output_window_dims_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > elided_window_dims_;
  mutable int _elided_window_dims_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > gather_dims_to_operand_dims_;
  mutable int _gather_dims_to_operand_dims_cached_byte_size_;
  ::google::protobuf::int64 index_vector_dim_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsGatherDimensionNumbersImpl();
};
// -------------------------------------------------------------------

class ConvolutionDimensionNumbers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ConvolutionDimensionNumbers) */ {
 public:
  ConvolutionDimensionNumbers();
  virtual ~ConvolutionDimensionNumbers();

  ConvolutionDimensionNumbers(const ConvolutionDimensionNumbers& from);

  inline ConvolutionDimensionNumbers& operator=(const ConvolutionDimensionNumbers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConvolutionDimensionNumbers(ConvolutionDimensionNumbers&& from) noexcept
    : ConvolutionDimensionNumbers() {
    *this = ::std::move(from);
  }

  inline ConvolutionDimensionNumbers& operator=(ConvolutionDimensionNumbers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConvolutionDimensionNumbers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConvolutionDimensionNumbers* internal_default_instance() {
    return reinterpret_cast<const ConvolutionDimensionNumbers*>(
               &_ConvolutionDimensionNumbers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void UnsafeArenaSwap(ConvolutionDimensionNumbers* other);
  void Swap(ConvolutionDimensionNumbers* other);
  friend void swap(ConvolutionDimensionNumbers& a, ConvolutionDimensionNumbers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConvolutionDimensionNumbers* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<ConvolutionDimensionNumbers>(NULL);
  }

  ConvolutionDimensionNumbers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<ConvolutionDimensionNumbers>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConvolutionDimensionNumbers& from);
  void MergeFrom(const ConvolutionDimensionNumbers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConvolutionDimensionNumbers* other);
  protected:
  explicit ConvolutionDimensionNumbers(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 kernel_spatial_dimensions = 6;
  int kernel_spatial_dimensions_size() const;
  void clear_kernel_spatial_dimensions();
  static const int kKernelSpatialDimensionsFieldNumber = 6;
  ::google::protobuf::int64 kernel_spatial_dimensions(int index) const;
  void set_kernel_spatial_dimensions(int index, ::google::protobuf::int64 value);
  void add_kernel_spatial_dimensions(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      kernel_spatial_dimensions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_kernel_spatial_dimensions();

  // repeated int64 input_spatial_dimensions = 11;
  int input_spatial_dimensions_size() const;
  void clear_input_spatial_dimensions();
  static const int kInputSpatialDimensionsFieldNumber = 11;
  ::google::protobuf::int64 input_spatial_dimensions(int index) const;
  void set_input_spatial_dimensions(int index, ::google::protobuf::int64 value);
  void add_input_spatial_dimensions(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      input_spatial_dimensions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_input_spatial_dimensions();

  // repeated int64 output_spatial_dimensions = 12;
  int output_spatial_dimensions_size() const;
  void clear_output_spatial_dimensions();
  static const int kOutputSpatialDimensionsFieldNumber = 12;
  ::google::protobuf::int64 output_spatial_dimensions(int index) const;
  void set_output_spatial_dimensions(int index, ::google::protobuf::int64 value);
  void add_output_spatial_dimensions(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      output_spatial_dimensions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_output_spatial_dimensions();

  // int64 kernel_input_feature_dimension = 3;
  void clear_kernel_input_feature_dimension();
  static const int kKernelInputFeatureDimensionFieldNumber = 3;
  ::google::protobuf::int64 kernel_input_feature_dimension() const;
  void set_kernel_input_feature_dimension(::google::protobuf::int64 value);

  // int64 kernel_output_feature_dimension = 4;
  void clear_kernel_output_feature_dimension();
  static const int kKernelOutputFeatureDimensionFieldNumber = 4;
  ::google::protobuf::int64 kernel_output_feature_dimension() const;
  void set_kernel_output_feature_dimension(::google::protobuf::int64 value);

  // int64 input_batch_dimension = 7;
  void clear_input_batch_dimension();
  static const int kInputBatchDimensionFieldNumber = 7;
  ::google::protobuf::int64 input_batch_dimension() const;
  void set_input_batch_dimension(::google::protobuf::int64 value);

  // int64 input_feature_dimension = 8;
  void clear_input_feature_dimension();
  static const int kInputFeatureDimensionFieldNumber = 8;
  ::google::protobuf::int64 input_feature_dimension() const;
  void set_input_feature_dimension(::google::protobuf::int64 value);

  // int64 output_batch_dimension = 9;
  void clear_output_batch_dimension();
  static const int kOutputBatchDimensionFieldNumber = 9;
  ::google::protobuf::int64 output_batch_dimension() const;
  void set_output_batch_dimension(::google::protobuf::int64 value);

  // int64 output_feature_dimension = 10;
  void clear_output_feature_dimension();
  static const int kOutputFeatureDimensionFieldNumber = 10;
  ::google::protobuf::int64 output_feature_dimension() const;
  void set_output_feature_dimension(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:xla.ConvolutionDimensionNumbers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > kernel_spatial_dimensions_;
  mutable int _kernel_spatial_dimensions_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > input_spatial_dimensions_;
  mutable int _input_spatial_dimensions_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > output_spatial_dimensions_;
  mutable int _output_spatial_dimensions_cached_byte_size_;
  ::google::protobuf::int64 kernel_input_feature_dimension_;
  ::google::protobuf::int64 kernel_output_feature_dimension_;
  ::google::protobuf::int64 input_batch_dimension_;
  ::google::protobuf::int64 input_feature_dimension_;
  ::google::protobuf::int64 output_batch_dimension_;
  ::google::protobuf::int64 output_feature_dimension_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsConvolutionDimensionNumbersImpl();
};
// -------------------------------------------------------------------

class DotDimensionNumbers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.DotDimensionNumbers) */ {
 public:
  DotDimensionNumbers();
  virtual ~DotDimensionNumbers();

  DotDimensionNumbers(const DotDimensionNumbers& from);

  inline DotDimensionNumbers& operator=(const DotDimensionNumbers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DotDimensionNumbers(DotDimensionNumbers&& from) noexcept
    : DotDimensionNumbers() {
    *this = ::std::move(from);
  }

  inline DotDimensionNumbers& operator=(DotDimensionNumbers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DotDimensionNumbers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DotDimensionNumbers* internal_default_instance() {
    return reinterpret_cast<const DotDimensionNumbers*>(
               &_DotDimensionNumbers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void UnsafeArenaSwap(DotDimensionNumbers* other);
  void Swap(DotDimensionNumbers* other);
  friend void swap(DotDimensionNumbers& a, DotDimensionNumbers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DotDimensionNumbers* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<DotDimensionNumbers>(NULL);
  }

  DotDimensionNumbers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<DotDimensionNumbers>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DotDimensionNumbers& from);
  void MergeFrom(const DotDimensionNumbers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DotDimensionNumbers* other);
  protected:
  explicit DotDimensionNumbers(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 lhs_contracting_dimensions = 1;
  int lhs_contracting_dimensions_size() const;
  void clear_lhs_contracting_dimensions();
  static const int kLhsContractingDimensionsFieldNumber = 1;
  ::google::protobuf::int64 lhs_contracting_dimensions(int index) const;
  void set_lhs_contracting_dimensions(int index, ::google::protobuf::int64 value);
  void add_lhs_contracting_dimensions(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      lhs_contracting_dimensions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_lhs_contracting_dimensions();

  // repeated int64 rhs_contracting_dimensions = 2;
  int rhs_contracting_dimensions_size() const;
  void clear_rhs_contracting_dimensions();
  static const int kRhsContractingDimensionsFieldNumber = 2;
  ::google::protobuf::int64 rhs_contracting_dimensions(int index) const;
  void set_rhs_contracting_dimensions(int index, ::google::protobuf::int64 value);
  void add_rhs_contracting_dimensions(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      rhs_contracting_dimensions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_rhs_contracting_dimensions();

  // repeated int64 lhs_batch_dimensions = 3;
  int lhs_batch_dimensions_size() const;
  void clear_lhs_batch_dimensions();
  static const int kLhsBatchDimensionsFieldNumber = 3;
  ::google::protobuf::int64 lhs_batch_dimensions(int index) const;
  void set_lhs_batch_dimensions(int index, ::google::protobuf::int64 value);
  void add_lhs_batch_dimensions(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      lhs_batch_dimensions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_lhs_batch_dimensions();

  // repeated int64 rhs_batch_dimensions = 4;
  int rhs_batch_dimensions_size() const;
  void clear_rhs_batch_dimensions();
  static const int kRhsBatchDimensionsFieldNumber = 4;
  ::google::protobuf::int64 rhs_batch_dimensions(int index) const;
  void set_rhs_batch_dimensions(int index, ::google::protobuf::int64 value);
  void add_rhs_batch_dimensions(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      rhs_batch_dimensions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_rhs_batch_dimensions();

  // @@protoc_insertion_point(class_scope:xla.DotDimensionNumbers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > lhs_contracting_dimensions_;
  mutable int _lhs_contracting_dimensions_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > rhs_contracting_dimensions_;
  mutable int _rhs_contracting_dimensions_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > lhs_batch_dimensions_;
  mutable int _lhs_batch_dimensions_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > rhs_batch_dimensions_;
  mutable int _rhs_batch_dimensions_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsDotDimensionNumbersImpl();
};
// -------------------------------------------------------------------

class OpSharding : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.OpSharding) */ {
 public:
  OpSharding();
  virtual ~OpSharding();

  OpSharding(const OpSharding& from);

  inline OpSharding& operator=(const OpSharding& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpSharding(OpSharding&& from) noexcept
    : OpSharding() {
    *this = ::std::move(from);
  }

  inline OpSharding& operator=(OpSharding&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpSharding& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpSharding* internal_default_instance() {
    return reinterpret_cast<const OpSharding*>(
               &_OpSharding_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void UnsafeArenaSwap(OpSharding* other);
  void Swap(OpSharding* other);
  friend void swap(OpSharding& a, OpSharding& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpSharding* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<OpSharding>(NULL);
  }

  OpSharding* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<OpSharding>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpSharding& from);
  void MergeFrom(const OpSharding& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpSharding* other);
  protected:
  explicit OpSharding(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef OpSharding_Type Type;
  static const Type REPLICATED =
    OpSharding_Type_REPLICATED;
  static const Type MAXIMAL =
    OpSharding_Type_MAXIMAL;
  static const Type TUPLE =
    OpSharding_Type_TUPLE;
  static const Type OTHER =
    OpSharding_Type_OTHER;
  static inline bool Type_IsValid(int value) {
    return OpSharding_Type_IsValid(value);
  }
  static const Type Type_MIN =
    OpSharding_Type_Type_MIN;
  static const Type Type_MAX =
    OpSharding_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    OpSharding_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return OpSharding_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return OpSharding_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return OpSharding_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int64 tile_assignment_dimensions = 3;
  int tile_assignment_dimensions_size() const;
  void clear_tile_assignment_dimensions();
  static const int kTileAssignmentDimensionsFieldNumber = 3;
  ::google::protobuf::int64 tile_assignment_dimensions(int index) const;
  void set_tile_assignment_dimensions(int index, ::google::protobuf::int64 value);
  void add_tile_assignment_dimensions(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      tile_assignment_dimensions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_tile_assignment_dimensions();

  // repeated int64 tile_assignment_devices = 4;
  int tile_assignment_devices_size() const;
  void clear_tile_assignment_devices();
  static const int kTileAssignmentDevicesFieldNumber = 4;
  ::google::protobuf::int64 tile_assignment_devices(int index) const;
  void set_tile_assignment_devices(int index, ::google::protobuf::int64 value);
  void add_tile_assignment_devices(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      tile_assignment_devices() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_tile_assignment_devices();

  // repeated .xla.OpSharding tuple_shardings = 5;
  int tuple_shardings_size() const;
  void clear_tuple_shardings();
  static const int kTupleShardingsFieldNumber = 5;
  ::xla::OpSharding* mutable_tuple_shardings(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::OpSharding >*
      mutable_tuple_shardings();
  const ::xla::OpSharding& tuple_shardings(int index) const;
  ::xla::OpSharding* add_tuple_shardings();
  const ::google::protobuf::RepeatedPtrField< ::xla::OpSharding >&
      tuple_shardings() const;

  // .xla.Shape tile_shape = 2;
  bool has_tile_shape() const;
  void clear_tile_shape();
  static const int kTileShapeFieldNumber = 2;
  const ::xla::Shape& tile_shape() const;
  ::xla::Shape* release_tile_shape();
  ::xla::Shape* mutable_tile_shape();
  void set_allocated_tile_shape(::xla::Shape* tile_shape);
  void unsafe_arena_set_allocated_tile_shape(
      ::xla::Shape* tile_shape);
  ::xla::Shape* unsafe_arena_release_tile_shape();

  // .xla.OpSharding.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::xla::OpSharding_Type type() const;
  void set_type(::xla::OpSharding_Type value);

  // @@protoc_insertion_point(class_scope:xla.OpSharding)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > tile_assignment_dimensions_;
  mutable int _tile_assignment_dimensions_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > tile_assignment_devices_;
  mutable int _tile_assignment_devices_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::xla::OpSharding > tuple_shardings_;
  ::xla::Shape* tile_shape_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto::InitDefaultsOpShardingImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PaddingConfig_PaddingConfigDimension

// int64 edge_padding_low = 1;
inline void PaddingConfig_PaddingConfigDimension::clear_edge_padding_low() {
  edge_padding_low_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PaddingConfig_PaddingConfigDimension::edge_padding_low() const {
  // @@protoc_insertion_point(field_get:xla.PaddingConfig.PaddingConfigDimension.edge_padding_low)
  return edge_padding_low_;
}
inline void PaddingConfig_PaddingConfigDimension::set_edge_padding_low(::google::protobuf::int64 value) {
  
  edge_padding_low_ = value;
  // @@protoc_insertion_point(field_set:xla.PaddingConfig.PaddingConfigDimension.edge_padding_low)
}

// int64 edge_padding_high = 2;
inline void PaddingConfig_PaddingConfigDimension::clear_edge_padding_high() {
  edge_padding_high_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PaddingConfig_PaddingConfigDimension::edge_padding_high() const {
  // @@protoc_insertion_point(field_get:xla.PaddingConfig.PaddingConfigDimension.edge_padding_high)
  return edge_padding_high_;
}
inline void PaddingConfig_PaddingConfigDimension::set_edge_padding_high(::google::protobuf::int64 value) {
  
  edge_padding_high_ = value;
  // @@protoc_insertion_point(field_set:xla.PaddingConfig.PaddingConfigDimension.edge_padding_high)
}

// int64 interior_padding = 3;
inline void PaddingConfig_PaddingConfigDimension::clear_interior_padding() {
  interior_padding_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PaddingConfig_PaddingConfigDimension::interior_padding() const {
  // @@protoc_insertion_point(field_get:xla.PaddingConfig.PaddingConfigDimension.interior_padding)
  return interior_padding_;
}
inline void PaddingConfig_PaddingConfigDimension::set_interior_padding(::google::protobuf::int64 value) {
  
  interior_padding_ = value;
  // @@protoc_insertion_point(field_set:xla.PaddingConfig.PaddingConfigDimension.interior_padding)
}

// -------------------------------------------------------------------

// PaddingConfig

// repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;
inline int PaddingConfig::dimensions_size() const {
  return dimensions_.size();
}
inline void PaddingConfig::clear_dimensions() {
  dimensions_.Clear();
}
inline ::xla::PaddingConfig_PaddingConfigDimension* PaddingConfig::mutable_dimensions(int index) {
  // @@protoc_insertion_point(field_mutable:xla.PaddingConfig.dimensions)
  return dimensions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::PaddingConfig_PaddingConfigDimension >*
PaddingConfig::mutable_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.PaddingConfig.dimensions)
  return &dimensions_;
}
inline const ::xla::PaddingConfig_PaddingConfigDimension& PaddingConfig::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.PaddingConfig.dimensions)
  return dimensions_.Get(index);
}
inline ::xla::PaddingConfig_PaddingConfigDimension* PaddingConfig::add_dimensions() {
  // @@protoc_insertion_point(field_add:xla.PaddingConfig.dimensions)
  return dimensions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::PaddingConfig_PaddingConfigDimension >&
PaddingConfig::dimensions() const {
  // @@protoc_insertion_point(field_list:xla.PaddingConfig.dimensions)
  return dimensions_;
}

// -------------------------------------------------------------------

// Layout

// .xla.Format format = 4;
inline void Layout::clear_format() {
  format_ = 0;
}
inline ::xla::Format Layout::format() const {
  // @@protoc_insertion_point(field_get:xla.Layout.format)
  return static_cast< ::xla::Format >(format_);
}
inline void Layout::set_format(::xla::Format value) {
  
  format_ = value;
  // @@protoc_insertion_point(field_set:xla.Layout.format)
}

// repeated int64 minor_to_major = 1;
inline int Layout::minor_to_major_size() const {
  return minor_to_major_.size();
}
inline void Layout::clear_minor_to_major() {
  minor_to_major_.Clear();
}
inline ::google::protobuf::int64 Layout::minor_to_major(int index) const {
  // @@protoc_insertion_point(field_get:xla.Layout.minor_to_major)
  return minor_to_major_.Get(index);
}
inline void Layout::set_minor_to_major(int index, ::google::protobuf::int64 value) {
  minor_to_major_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.Layout.minor_to_major)
}
inline void Layout::add_minor_to_major(::google::protobuf::int64 value) {
  minor_to_major_.Add(value);
  // @@protoc_insertion_point(field_add:xla.Layout.minor_to_major)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Layout::minor_to_major() const {
  // @@protoc_insertion_point(field_list:xla.Layout.minor_to_major)
  return minor_to_major_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Layout::mutable_minor_to_major() {
  // @@protoc_insertion_point(field_mutable_list:xla.Layout.minor_to_major)
  return &minor_to_major_;
}

// repeated int64 padded_dimensions = 2;
inline int Layout::padded_dimensions_size() const {
  return padded_dimensions_.size();
}
inline void Layout::clear_padded_dimensions() {
  padded_dimensions_.Clear();
}
inline ::google::protobuf::int64 Layout::padded_dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.Layout.padded_dimensions)
  return padded_dimensions_.Get(index);
}
inline void Layout::set_padded_dimensions(int index, ::google::protobuf::int64 value) {
  padded_dimensions_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.Layout.padded_dimensions)
}
inline void Layout::add_padded_dimensions(::google::protobuf::int64 value) {
  padded_dimensions_.Add(value);
  // @@protoc_insertion_point(field_add:xla.Layout.padded_dimensions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Layout::padded_dimensions() const {
  // @@protoc_insertion_point(field_list:xla.Layout.padded_dimensions)
  return padded_dimensions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Layout::mutable_padded_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.Layout.padded_dimensions)
  return &padded_dimensions_;
}

// .xla.PaddingValue padding_value = 3;
inline void Layout::clear_padding_value() {
  padding_value_ = 0;
}
inline ::xla::PaddingValue Layout::padding_value() const {
  // @@protoc_insertion_point(field_get:xla.Layout.padding_value)
  return static_cast< ::xla::PaddingValue >(padding_value_);
}
inline void Layout::set_padding_value(::xla::PaddingValue value) {
  
  padding_value_ = value;
  // @@protoc_insertion_point(field_set:xla.Layout.padding_value)
}

// int64 max_sparse_elements = 5;
inline void Layout::clear_max_sparse_elements() {
  max_sparse_elements_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Layout::max_sparse_elements() const {
  // @@protoc_insertion_point(field_get:xla.Layout.max_sparse_elements)
  return max_sparse_elements_;
}
inline void Layout::set_max_sparse_elements(::google::protobuf::int64 value) {
  
  max_sparse_elements_ = value;
  // @@protoc_insertion_point(field_set:xla.Layout.max_sparse_elements)
}

// -------------------------------------------------------------------

// Shape

// .xla.PrimitiveType element_type = 2;
inline void Shape::clear_element_type() {
  element_type_ = 0;
}
inline ::xla::PrimitiveType Shape::element_type() const {
  // @@protoc_insertion_point(field_get:xla.Shape.element_type)
  return static_cast< ::xla::PrimitiveType >(element_type_);
}
inline void Shape::set_element_type(::xla::PrimitiveType value) {
  
  element_type_ = value;
  // @@protoc_insertion_point(field_set:xla.Shape.element_type)
}

// repeated int64 dimensions = 3;
inline int Shape::dimensions_size() const {
  return dimensions_.size();
}
inline void Shape::clear_dimensions() {
  dimensions_.Clear();
}
inline ::google::protobuf::int64 Shape::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.Shape.dimensions)
  return dimensions_.Get(index);
}
inline void Shape::set_dimensions(int index, ::google::protobuf::int64 value) {
  dimensions_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.Shape.dimensions)
}
inline void Shape::add_dimensions(::google::protobuf::int64 value) {
  dimensions_.Add(value);
  // @@protoc_insertion_point(field_add:xla.Shape.dimensions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Shape::dimensions() const {
  // @@protoc_insertion_point(field_list:xla.Shape.dimensions)
  return dimensions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Shape::mutable_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.Shape.dimensions)
  return &dimensions_;
}

// repeated .xla.Shape tuple_shapes = 4;
inline int Shape::tuple_shapes_size() const {
  return tuple_shapes_.size();
}
inline void Shape::clear_tuple_shapes() {
  tuple_shapes_.Clear();
}
inline ::xla::Shape* Shape::mutable_tuple_shapes(int index) {
  // @@protoc_insertion_point(field_mutable:xla.Shape.tuple_shapes)
  return tuple_shapes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::Shape >*
Shape::mutable_tuple_shapes() {
  // @@protoc_insertion_point(field_mutable_list:xla.Shape.tuple_shapes)
  return &tuple_shapes_;
}
inline const ::xla::Shape& Shape::tuple_shapes(int index) const {
  // @@protoc_insertion_point(field_get:xla.Shape.tuple_shapes)
  return tuple_shapes_.Get(index);
}
inline ::xla::Shape* Shape::add_tuple_shapes() {
  // @@protoc_insertion_point(field_add:xla.Shape.tuple_shapes)
  return tuple_shapes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::Shape >&
Shape::tuple_shapes() const {
  // @@protoc_insertion_point(field_list:xla.Shape.tuple_shapes)
  return tuple_shapes_;
}

// .xla.Layout layout = 5;
inline bool Shape::has_layout() const {
  return this != internal_default_instance() && layout_ != NULL;
}
inline void Shape::clear_layout() {
  if (GetArenaNoVirtual() == NULL && layout_ != NULL) {
    delete layout_;
  }
  layout_ = NULL;
}
inline const ::xla::Layout& Shape::layout() const {
  const ::xla::Layout* p = layout_;
  // @@protoc_insertion_point(field_get:xla.Shape.layout)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::Layout*>(
      &::xla::_Layout_default_instance_);
}
inline ::xla::Layout* Shape::release_layout() {
  // @@protoc_insertion_point(field_release:xla.Shape.layout)
  
  ::xla::Layout* temp = layout_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  layout_ = NULL;
  return temp;
}
inline ::xla::Layout* Shape::unsafe_arena_release_layout() {
  // @@protoc_insertion_point(field_unsafe_arena_release:xla.Shape.layout)
  
  ::xla::Layout* temp = layout_;
  layout_ = NULL;
  return temp;
}
inline ::xla::Layout* Shape::mutable_layout() {
  
  if (layout_ == NULL) {
    layout_ = ::google::protobuf::Arena::CreateMessage< ::xla::Layout >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.Shape.layout)
  return layout_;
}
inline void Shape::set_allocated_layout(::xla::Layout* layout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete layout_;
  }
  if (layout) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(layout);
    if (message_arena != submessage_arena) {
      layout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, layout, submessage_arena);
    }
    
  } else {
    
  }
  layout_ = layout;
  // @@protoc_insertion_point(field_set_allocated:xla.Shape.layout)
}

// -------------------------------------------------------------------

// ProgramShape

// repeated .xla.Shape parameters = 1;
inline int ProgramShape::parameters_size() const {
  return parameters_.size();
}
inline void ProgramShape::clear_parameters() {
  parameters_.Clear();
}
inline ::xla::Shape* ProgramShape::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:xla.ProgramShape.parameters)
  return parameters_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::Shape >*
ProgramShape::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:xla.ProgramShape.parameters)
  return &parameters_;
}
inline const ::xla::Shape& ProgramShape::parameters(int index) const {
  // @@protoc_insertion_point(field_get:xla.ProgramShape.parameters)
  return parameters_.Get(index);
}
inline ::xla::Shape* ProgramShape::add_parameters() {
  // @@protoc_insertion_point(field_add:xla.ProgramShape.parameters)
  return parameters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::Shape >&
ProgramShape::parameters() const {
  // @@protoc_insertion_point(field_list:xla.ProgramShape.parameters)
  return parameters_;
}

// .xla.Shape result = 2;
inline bool ProgramShape::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
inline void ProgramShape::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
}
inline const ::xla::Shape& ProgramShape::result() const {
  const ::xla::Shape* p = result_;
  // @@protoc_insertion_point(field_get:xla.ProgramShape.result)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::Shape*>(
      &::xla::_Shape_default_instance_);
}
inline ::xla::Shape* ProgramShape::release_result() {
  // @@protoc_insertion_point(field_release:xla.ProgramShape.result)
  
  ::xla::Shape* temp = result_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  result_ = NULL;
  return temp;
}
inline ::xla::Shape* ProgramShape::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_unsafe_arena_release:xla.ProgramShape.result)
  
  ::xla::Shape* temp = result_;
  result_ = NULL;
  return temp;
}
inline ::xla::Shape* ProgramShape::mutable_result() {
  
  if (result_ == NULL) {
    result_ = ::google::protobuf::Arena::CreateMessage< ::xla::Shape >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ProgramShape.result)
  return result_;
}
inline void ProgramShape::set_allocated_result(::xla::Shape* result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete result_;
  }
  if (result) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(result);
    if (message_arena != submessage_arena) {
      result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:xla.ProgramShape.result)
}

// repeated string parameter_names = 3;
inline int ProgramShape::parameter_names_size() const {
  return parameter_names_.size();
}
inline void ProgramShape::clear_parameter_names() {
  parameter_names_.Clear();
}
inline const ::std::string& ProgramShape::parameter_names(int index) const {
  // @@protoc_insertion_point(field_get:xla.ProgramShape.parameter_names)
  return parameter_names_.Get(index);
}
inline ::std::string* ProgramShape::mutable_parameter_names(int index) {
  // @@protoc_insertion_point(field_mutable:xla.ProgramShape.parameter_names)
  return parameter_names_.Mutable(index);
}
inline void ProgramShape::set_parameter_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:xla.ProgramShape.parameter_names)
  parameter_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ProgramShape::set_parameter_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:xla.ProgramShape.parameter_names)
  parameter_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ProgramShape::set_parameter_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  parameter_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:xla.ProgramShape.parameter_names)
}
inline void ProgramShape::set_parameter_names(int index, const char* value, size_t size) {
  parameter_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:xla.ProgramShape.parameter_names)
}
inline ::std::string* ProgramShape::add_parameter_names() {
  // @@protoc_insertion_point(field_add_mutable:xla.ProgramShape.parameter_names)
  return parameter_names_.Add();
}
inline void ProgramShape::add_parameter_names(const ::std::string& value) {
  parameter_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:xla.ProgramShape.parameter_names)
}
#if LANG_CXX11
inline void ProgramShape::add_parameter_names(::std::string&& value) {
  parameter_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:xla.ProgramShape.parameter_names)
}
#endif
inline void ProgramShape::add_parameter_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  parameter_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:xla.ProgramShape.parameter_names)
}
inline void ProgramShape::add_parameter_names(const char* value, size_t size) {
  parameter_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:xla.ProgramShape.parameter_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProgramShape::parameter_names() const {
  // @@protoc_insertion_point(field_list:xla.ProgramShape.parameter_names)
  return parameter_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProgramShape::mutable_parameter_names() {
  // @@protoc_insertion_point(field_mutable_list:xla.ProgramShape.parameter_names)
  return &parameter_names_;
}

// -------------------------------------------------------------------

// ComputationStats

// double flop_count = 1;
inline void ComputationStats::clear_flop_count() {
  flop_count_ = 0;
}
inline double ComputationStats::flop_count() const {
  // @@protoc_insertion_point(field_get:xla.ComputationStats.flop_count)
  return flop_count_;
}
inline void ComputationStats::set_flop_count(double value) {
  
  flop_count_ = value;
  // @@protoc_insertion_point(field_set:xla.ComputationStats.flop_count)
}

// double transcendental_count = 2;
inline void ComputationStats::clear_transcendental_count() {
  transcendental_count_ = 0;
}
inline double ComputationStats::transcendental_count() const {
  // @@protoc_insertion_point(field_get:xla.ComputationStats.transcendental_count)
  return transcendental_count_;
}
inline void ComputationStats::set_transcendental_count(double value) {
  
  transcendental_count_ = value;
  // @@protoc_insertion_point(field_set:xla.ComputationStats.transcendental_count)
}

// -------------------------------------------------------------------

// OpMetadata

// string op_type = 1;
inline void OpMetadata::clear_op_type() {
  op_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& OpMetadata::op_type() const {
  // @@protoc_insertion_point(field_get:xla.OpMetadata.op_type)
  return op_type_.Get();
}
inline void OpMetadata::set_op_type(const ::std::string& value) {
  
  op_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:xla.OpMetadata.op_type)
}
#if LANG_CXX11
inline void OpMetadata::set_op_type(::std::string&& value) {
  
  op_type_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:xla.OpMetadata.op_type)
}
#endif
inline void OpMetadata::set_op_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  op_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:xla.OpMetadata.op_type)
}
inline void OpMetadata::set_op_type(const char* value,
    size_t size) {
  
  op_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:xla.OpMetadata.op_type)
}
inline ::std::string* OpMetadata::mutable_op_type() {
  
  // @@protoc_insertion_point(field_mutable:xla.OpMetadata.op_type)
  return op_type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* OpMetadata::release_op_type() {
  // @@protoc_insertion_point(field_release:xla.OpMetadata.op_type)
  
  return op_type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void OpMetadata::set_allocated_op_type(::std::string* op_type) {
  if (op_type != NULL) {
    
  } else {
    
  }
  op_type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op_type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:xla.OpMetadata.op_type)
}
inline ::std::string* OpMetadata::unsafe_arena_release_op_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:xla.OpMetadata.op_type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return op_type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void OpMetadata::unsafe_arena_set_allocated_op_type(
    ::std::string* op_type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (op_type != NULL) {
    
  } else {
    
  }
  op_type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      op_type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.OpMetadata.op_type)
}

// string op_name = 2;
inline void OpMetadata::clear_op_name() {
  op_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& OpMetadata::op_name() const {
  // @@protoc_insertion_point(field_get:xla.OpMetadata.op_name)
  return op_name_.Get();
}
inline void OpMetadata::set_op_name(const ::std::string& value) {
  
  op_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:xla.OpMetadata.op_name)
}
#if LANG_CXX11
inline void OpMetadata::set_op_name(::std::string&& value) {
  
  op_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:xla.OpMetadata.op_name)
}
#endif
inline void OpMetadata::set_op_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  op_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:xla.OpMetadata.op_name)
}
inline void OpMetadata::set_op_name(const char* value,
    size_t size) {
  
  op_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:xla.OpMetadata.op_name)
}
inline ::std::string* OpMetadata::mutable_op_name() {
  
  // @@protoc_insertion_point(field_mutable:xla.OpMetadata.op_name)
  return op_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* OpMetadata::release_op_name() {
  // @@protoc_insertion_point(field_release:xla.OpMetadata.op_name)
  
  return op_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void OpMetadata::set_allocated_op_name(::std::string* op_name) {
  if (op_name != NULL) {
    
  } else {
    
  }
  op_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:xla.OpMetadata.op_name)
}
inline ::std::string* OpMetadata::unsafe_arena_release_op_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:xla.OpMetadata.op_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return op_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void OpMetadata::unsafe_arena_set_allocated_op_name(
    ::std::string* op_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (op_name != NULL) {
    
  } else {
    
  }
  op_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      op_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.OpMetadata.op_name)
}

// string source_file = 3;
inline void OpMetadata::clear_source_file() {
  source_file_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& OpMetadata::source_file() const {
  // @@protoc_insertion_point(field_get:xla.OpMetadata.source_file)
  return source_file_.Get();
}
inline void OpMetadata::set_source_file(const ::std::string& value) {
  
  source_file_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:xla.OpMetadata.source_file)
}
#if LANG_CXX11
inline void OpMetadata::set_source_file(::std::string&& value) {
  
  source_file_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:xla.OpMetadata.source_file)
}
#endif
inline void OpMetadata::set_source_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_file_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:xla.OpMetadata.source_file)
}
inline void OpMetadata::set_source_file(const char* value,
    size_t size) {
  
  source_file_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:xla.OpMetadata.source_file)
}
inline ::std::string* OpMetadata::mutable_source_file() {
  
  // @@protoc_insertion_point(field_mutable:xla.OpMetadata.source_file)
  return source_file_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* OpMetadata::release_source_file() {
  // @@protoc_insertion_point(field_release:xla.OpMetadata.source_file)
  
  return source_file_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void OpMetadata::set_allocated_source_file(::std::string* source_file) {
  if (source_file != NULL) {
    
  } else {
    
  }
  source_file_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_file,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:xla.OpMetadata.source_file)
}
inline ::std::string* OpMetadata::unsafe_arena_release_source_file() {
  // @@protoc_insertion_point(field_unsafe_arena_release:xla.OpMetadata.source_file)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return source_file_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void OpMetadata::unsafe_arena_set_allocated_source_file(
    ::std::string* source_file) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (source_file != NULL) {
    
  } else {
    
  }
  source_file_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      source_file, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.OpMetadata.source_file)
}

// int32 source_line = 4;
inline void OpMetadata::clear_source_line() {
  source_line_ = 0;
}
inline ::google::protobuf::int32 OpMetadata::source_line() const {
  // @@protoc_insertion_point(field_get:xla.OpMetadata.source_line)
  return source_line_;
}
inline void OpMetadata::set_source_line(::google::protobuf::int32 value) {
  
  source_line_ = value;
  // @@protoc_insertion_point(field_set:xla.OpMetadata.source_line)
}

// -------------------------------------------------------------------

// ExecutionProfile

// bool compilation_cache_hit = 1;
inline void ExecutionProfile::clear_compilation_cache_hit() {
  compilation_cache_hit_ = false;
}
inline bool ExecutionProfile::compilation_cache_hit() const {
  // @@protoc_insertion_point(field_get:xla.ExecutionProfile.compilation_cache_hit)
  return compilation_cache_hit_;
}
inline void ExecutionProfile::set_compilation_cache_hit(bool value) {
  
  compilation_cache_hit_ = value;
  // @@protoc_insertion_point(field_set:xla.ExecutionProfile.compilation_cache_hit)
}

// int64 compile_time_ms = 2;
inline void ExecutionProfile::clear_compile_time_ms() {
  compile_time_ms_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecutionProfile::compile_time_ms() const {
  // @@protoc_insertion_point(field_get:xla.ExecutionProfile.compile_time_ms)
  return compile_time_ms_;
}
inline void ExecutionProfile::set_compile_time_ms(::google::protobuf::int64 value) {
  
  compile_time_ms_ = value;
  // @@protoc_insertion_point(field_set:xla.ExecutionProfile.compile_time_ms)
}

// int64 compute_cycle_count = 3;
inline void ExecutionProfile::clear_compute_cycle_count() {
  compute_cycle_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecutionProfile::compute_cycle_count() const {
  // @@protoc_insertion_point(field_get:xla.ExecutionProfile.compute_cycle_count)
  return compute_cycle_count_;
}
inline void ExecutionProfile::set_compute_cycle_count(::google::protobuf::int64 value) {
  
  compute_cycle_count_ = value;
  // @@protoc_insertion_point(field_set:xla.ExecutionProfile.compute_cycle_count)
}

// int64 compute_time_ns = 4;
inline void ExecutionProfile::clear_compute_time_ns() {
  compute_time_ns_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecutionProfile::compute_time_ns() const {
  // @@protoc_insertion_point(field_get:xla.ExecutionProfile.compute_time_ns)
  return compute_time_ns_;
}
inline void ExecutionProfile::set_compute_time_ns(::google::protobuf::int64 value) {
  
  compute_time_ns_ = value;
  // @@protoc_insertion_point(field_set:xla.ExecutionProfile.compute_time_ns)
}

// int64 compute_and_transfer_time_ns = 5;
inline void ExecutionProfile::clear_compute_and_transfer_time_ns() {
  compute_and_transfer_time_ns_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecutionProfile::compute_and_transfer_time_ns() const {
  // @@protoc_insertion_point(field_get:xla.ExecutionProfile.compute_and_transfer_time_ns)
  return compute_and_transfer_time_ns_;
}
inline void ExecutionProfile::set_compute_and_transfer_time_ns(::google::protobuf::int64 value) {
  
  compute_and_transfer_time_ns_ = value;
  // @@protoc_insertion_point(field_set:xla.ExecutionProfile.compute_and_transfer_time_ns)
}

// -------------------------------------------------------------------

// ExecutionHandle

// int64 handle = 1;
inline void ExecutionHandle::clear_handle() {
  handle_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ExecutionHandle::handle() const {
  // @@protoc_insertion_point(field_get:xla.ExecutionHandle.handle)
  return handle_;
}
inline void ExecutionHandle::set_handle(::google::protobuf::int64 value) {
  
  handle_ = value;
  // @@protoc_insertion_point(field_set:xla.ExecutionHandle.handle)
}

// -------------------------------------------------------------------

// GlobalDataHandle

// int64 handle = 1;
inline void GlobalDataHandle::clear_handle() {
  handle_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GlobalDataHandle::handle() const {
  // @@protoc_insertion_point(field_get:xla.GlobalDataHandle.handle)
  return handle_;
}
inline void GlobalDataHandle::set_handle(::google::protobuf::int64 value) {
  
  handle_ = value;
  // @@protoc_insertion_point(field_set:xla.GlobalDataHandle.handle)
}

// -------------------------------------------------------------------

// DeviceHandle

// int64 handle = 1;
inline void DeviceHandle::clear_handle() {
  handle_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DeviceHandle::handle() const {
  // @@protoc_insertion_point(field_get:xla.DeviceHandle.handle)
  return handle_;
}
inline void DeviceHandle::set_handle(::google::protobuf::int64 value) {
  
  handle_ = value;
  // @@protoc_insertion_point(field_set:xla.DeviceHandle.handle)
}

// int64 device_count = 2;
inline void DeviceHandle::clear_device_count() {
  device_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DeviceHandle::device_count() const {
  // @@protoc_insertion_point(field_get:xla.DeviceHandle.device_count)
  return device_count_;
}
inline void DeviceHandle::set_device_count(::google::protobuf::int64 value) {
  
  device_count_ = value;
  // @@protoc_insertion_point(field_set:xla.DeviceHandle.device_count)
}

// -------------------------------------------------------------------

// ChannelHandle

// int64 handle = 1;
inline void ChannelHandle::clear_handle() {
  handle_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ChannelHandle::handle() const {
  // @@protoc_insertion_point(field_get:xla.ChannelHandle.handle)
  return handle_;
}
inline void ChannelHandle::set_handle(::google::protobuf::int64 value) {
  
  handle_ = value;
  // @@protoc_insertion_point(field_set:xla.ChannelHandle.handle)
}

// -------------------------------------------------------------------

// DeviceAssignmentProto_ComputationDevice

// repeated int32 replica_device_ids = 1;
inline int DeviceAssignmentProto_ComputationDevice::replica_device_ids_size() const {
  return replica_device_ids_.size();
}
inline void DeviceAssignmentProto_ComputationDevice::clear_replica_device_ids() {
  replica_device_ids_.Clear();
}
inline ::google::protobuf::int32 DeviceAssignmentProto_ComputationDevice::replica_device_ids(int index) const {
  // @@protoc_insertion_point(field_get:xla.DeviceAssignmentProto.ComputationDevice.replica_device_ids)
  return replica_device_ids_.Get(index);
}
inline void DeviceAssignmentProto_ComputationDevice::set_replica_device_ids(int index, ::google::protobuf::int32 value) {
  replica_device_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.DeviceAssignmentProto.ComputationDevice.replica_device_ids)
}
inline void DeviceAssignmentProto_ComputationDevice::add_replica_device_ids(::google::protobuf::int32 value) {
  replica_device_ids_.Add(value);
  // @@protoc_insertion_point(field_add:xla.DeviceAssignmentProto.ComputationDevice.replica_device_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DeviceAssignmentProto_ComputationDevice::replica_device_ids() const {
  // @@protoc_insertion_point(field_list:xla.DeviceAssignmentProto.ComputationDevice.replica_device_ids)
  return replica_device_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DeviceAssignmentProto_ComputationDevice::mutable_replica_device_ids() {
  // @@protoc_insertion_point(field_mutable_list:xla.DeviceAssignmentProto.ComputationDevice.replica_device_ids)
  return &replica_device_ids_;
}

// -------------------------------------------------------------------

// DeviceAssignmentProto

// int32 replica_count = 1;
inline void DeviceAssignmentProto::clear_replica_count() {
  replica_count_ = 0;
}
inline ::google::protobuf::int32 DeviceAssignmentProto::replica_count() const {
  // @@protoc_insertion_point(field_get:xla.DeviceAssignmentProto.replica_count)
  return replica_count_;
}
inline void DeviceAssignmentProto::set_replica_count(::google::protobuf::int32 value) {
  
  replica_count_ = value;
  // @@protoc_insertion_point(field_set:xla.DeviceAssignmentProto.replica_count)
}

// int32 computation_count = 2;
inline void DeviceAssignmentProto::clear_computation_count() {
  computation_count_ = 0;
}
inline ::google::protobuf::int32 DeviceAssignmentProto::computation_count() const {
  // @@protoc_insertion_point(field_get:xla.DeviceAssignmentProto.computation_count)
  return computation_count_;
}
inline void DeviceAssignmentProto::set_computation_count(::google::protobuf::int32 value) {
  
  computation_count_ = value;
  // @@protoc_insertion_point(field_set:xla.DeviceAssignmentProto.computation_count)
}

// repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;
inline int DeviceAssignmentProto::computation_devices_size() const {
  return computation_devices_.size();
}
inline void DeviceAssignmentProto::clear_computation_devices() {
  computation_devices_.Clear();
}
inline ::xla::DeviceAssignmentProto_ComputationDevice* DeviceAssignmentProto::mutable_computation_devices(int index) {
  // @@protoc_insertion_point(field_mutable:xla.DeviceAssignmentProto.computation_devices)
  return computation_devices_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::DeviceAssignmentProto_ComputationDevice >*
DeviceAssignmentProto::mutable_computation_devices() {
  // @@protoc_insertion_point(field_mutable_list:xla.DeviceAssignmentProto.computation_devices)
  return &computation_devices_;
}
inline const ::xla::DeviceAssignmentProto_ComputationDevice& DeviceAssignmentProto::computation_devices(int index) const {
  // @@protoc_insertion_point(field_get:xla.DeviceAssignmentProto.computation_devices)
  return computation_devices_.Get(index);
}
inline ::xla::DeviceAssignmentProto_ComputationDevice* DeviceAssignmentProto::add_computation_devices() {
  // @@protoc_insertion_point(field_add:xla.DeviceAssignmentProto.computation_devices)
  return computation_devices_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::DeviceAssignmentProto_ComputationDevice >&
DeviceAssignmentProto::computation_devices() const {
  // @@protoc_insertion_point(field_list:xla.DeviceAssignmentProto.computation_devices)
  return computation_devices_;
}

// -------------------------------------------------------------------

// LiteralProto

// .xla.Shape shape = 1;
inline bool LiteralProto::has_shape() const {
  return this != internal_default_instance() && shape_ != NULL;
}
inline void LiteralProto::clear_shape() {
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) {
    delete shape_;
  }
  shape_ = NULL;
}
inline const ::xla::Shape& LiteralProto::shape() const {
  const ::xla::Shape* p = shape_;
  // @@protoc_insertion_point(field_get:xla.LiteralProto.shape)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::Shape*>(
      &::xla::_Shape_default_instance_);
}
inline ::xla::Shape* LiteralProto::release_shape() {
  // @@protoc_insertion_point(field_release:xla.LiteralProto.shape)
  
  ::xla::Shape* temp = shape_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  shape_ = NULL;
  return temp;
}
inline ::xla::Shape* LiteralProto::unsafe_arena_release_shape() {
  // @@protoc_insertion_point(field_unsafe_arena_release:xla.LiteralProto.shape)
  
  ::xla::Shape* temp = shape_;
  shape_ = NULL;
  return temp;
}
inline ::xla::Shape* LiteralProto::mutable_shape() {
  
  if (shape_ == NULL) {
    shape_ = ::google::protobuf::Arena::CreateMessage< ::xla::Shape >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.LiteralProto.shape)
  return shape_;
}
inline void LiteralProto::set_allocated_shape(::xla::Shape* shape) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete shape_;
  }
  if (shape) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(shape);
    if (message_arena != submessage_arena) {
      shape = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, shape, submessage_arena);
    }
    
  } else {
    
  }
  shape_ = shape;
  // @@protoc_insertion_point(field_set_allocated:xla.LiteralProto.shape)
}

// repeated bool preds = 2;
inline int LiteralProto::preds_size() const {
  return preds_.size();
}
inline void LiteralProto::clear_preds() {
  preds_.Clear();
}
inline bool LiteralProto::preds(int index) const {
  // @@protoc_insertion_point(field_get:xla.LiteralProto.preds)
  return preds_.Get(index);
}
inline void LiteralProto::set_preds(int index, bool value) {
  preds_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.LiteralProto.preds)
}
inline void LiteralProto::add_preds(bool value) {
  preds_.Add(value);
  // @@protoc_insertion_point(field_add:xla.LiteralProto.preds)
}
inline const ::google::protobuf::RepeatedField< bool >&
LiteralProto::preds() const {
  // @@protoc_insertion_point(field_list:xla.LiteralProto.preds)
  return preds_;
}
inline ::google::protobuf::RepeatedField< bool >*
LiteralProto::mutable_preds() {
  // @@protoc_insertion_point(field_mutable_list:xla.LiteralProto.preds)
  return &preds_;
}

// bytes u8s = 3;
inline void LiteralProto::clear_u8s() {
  u8s_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& LiteralProto::u8s() const {
  // @@protoc_insertion_point(field_get:xla.LiteralProto.u8s)
  return u8s_.Get();
}
inline void LiteralProto::set_u8s(const ::std::string& value) {
  
  u8s_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:xla.LiteralProto.u8s)
}
#if LANG_CXX11
inline void LiteralProto::set_u8s(::std::string&& value) {
  
  u8s_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:xla.LiteralProto.u8s)
}
#endif
inline void LiteralProto::set_u8s(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  u8s_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:xla.LiteralProto.u8s)
}
inline void LiteralProto::set_u8s(const void* value,
    size_t size) {
  
  u8s_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:xla.LiteralProto.u8s)
}
inline ::std::string* LiteralProto::mutable_u8s() {
  
  // @@protoc_insertion_point(field_mutable:xla.LiteralProto.u8s)
  return u8s_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* LiteralProto::release_u8s() {
  // @@protoc_insertion_point(field_release:xla.LiteralProto.u8s)
  
  return u8s_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void LiteralProto::set_allocated_u8s(::std::string* u8s) {
  if (u8s != NULL) {
    
  } else {
    
  }
  u8s_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), u8s,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:xla.LiteralProto.u8s)
}
inline ::std::string* LiteralProto::unsafe_arena_release_u8s() {
  // @@protoc_insertion_point(field_unsafe_arena_release:xla.LiteralProto.u8s)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return u8s_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void LiteralProto::unsafe_arena_set_allocated_u8s(
    ::std::string* u8s) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (u8s != NULL) {
    
  } else {
    
  }
  u8s_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      u8s, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.LiteralProto.u8s)
}

// repeated int32 s32s = 4;
inline int LiteralProto::s32s_size() const {
  return s32s_.size();
}
inline void LiteralProto::clear_s32s() {
  s32s_.Clear();
}
inline ::google::protobuf::int32 LiteralProto::s32s(int index) const {
  // @@protoc_insertion_point(field_get:xla.LiteralProto.s32s)
  return s32s_.Get(index);
}
inline void LiteralProto::set_s32s(int index, ::google::protobuf::int32 value) {
  s32s_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.LiteralProto.s32s)
}
inline void LiteralProto::add_s32s(::google::protobuf::int32 value) {
  s32s_.Add(value);
  // @@protoc_insertion_point(field_add:xla.LiteralProto.s32s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LiteralProto::s32s() const {
  // @@protoc_insertion_point(field_list:xla.LiteralProto.s32s)
  return s32s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LiteralProto::mutable_s32s() {
  // @@protoc_insertion_point(field_mutable_list:xla.LiteralProto.s32s)
  return &s32s_;
}

// repeated int64 s64s = 5;
inline int LiteralProto::s64s_size() const {
  return s64s_.size();
}
inline void LiteralProto::clear_s64s() {
  s64s_.Clear();
}
inline ::google::protobuf::int64 LiteralProto::s64s(int index) const {
  // @@protoc_insertion_point(field_get:xla.LiteralProto.s64s)
  return s64s_.Get(index);
}
inline void LiteralProto::set_s64s(int index, ::google::protobuf::int64 value) {
  s64s_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.LiteralProto.s64s)
}
inline void LiteralProto::add_s64s(::google::protobuf::int64 value) {
  s64s_.Add(value);
  // @@protoc_insertion_point(field_add:xla.LiteralProto.s64s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
LiteralProto::s64s() const {
  // @@protoc_insertion_point(field_list:xla.LiteralProto.s64s)
  return s64s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
LiteralProto::mutable_s64s() {
  // @@protoc_insertion_point(field_mutable_list:xla.LiteralProto.s64s)
  return &s64s_;
}

// repeated uint32 u32s = 6;
inline int LiteralProto::u32s_size() const {
  return u32s_.size();
}
inline void LiteralProto::clear_u32s() {
  u32s_.Clear();
}
inline ::google::protobuf::uint32 LiteralProto::u32s(int index) const {
  // @@protoc_insertion_point(field_get:xla.LiteralProto.u32s)
  return u32s_.Get(index);
}
inline void LiteralProto::set_u32s(int index, ::google::protobuf::uint32 value) {
  u32s_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.LiteralProto.u32s)
}
inline void LiteralProto::add_u32s(::google::protobuf::uint32 value) {
  u32s_.Add(value);
  // @@protoc_insertion_point(field_add:xla.LiteralProto.u32s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LiteralProto::u32s() const {
  // @@protoc_insertion_point(field_list:xla.LiteralProto.u32s)
  return u32s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LiteralProto::mutable_u32s() {
  // @@protoc_insertion_point(field_mutable_list:xla.LiteralProto.u32s)
  return &u32s_;
}

// repeated uint64 u64s = 7;
inline int LiteralProto::u64s_size() const {
  return u64s_.size();
}
inline void LiteralProto::clear_u64s() {
  u64s_.Clear();
}
inline ::google::protobuf::uint64 LiteralProto::u64s(int index) const {
  // @@protoc_insertion_point(field_get:xla.LiteralProto.u64s)
  return u64s_.Get(index);
}
inline void LiteralProto::set_u64s(int index, ::google::protobuf::uint64 value) {
  u64s_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.LiteralProto.u64s)
}
inline void LiteralProto::add_u64s(::google::protobuf::uint64 value) {
  u64s_.Add(value);
  // @@protoc_insertion_point(field_add:xla.LiteralProto.u64s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LiteralProto::u64s() const {
  // @@protoc_insertion_point(field_list:xla.LiteralProto.u64s)
  return u64s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LiteralProto::mutable_u64s() {
  // @@protoc_insertion_point(field_mutable_list:xla.LiteralProto.u64s)
  return &u64s_;
}

// repeated float f32s = 8;
inline int LiteralProto::f32s_size() const {
  return f32s_.size();
}
inline void LiteralProto::clear_f32s() {
  f32s_.Clear();
}
inline float LiteralProto::f32s(int index) const {
  // @@protoc_insertion_point(field_get:xla.LiteralProto.f32s)
  return f32s_.Get(index);
}
inline void LiteralProto::set_f32s(int index, float value) {
  f32s_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.LiteralProto.f32s)
}
inline void LiteralProto::add_f32s(float value) {
  f32s_.Add(value);
  // @@protoc_insertion_point(field_add:xla.LiteralProto.f32s)
}
inline const ::google::protobuf::RepeatedField< float >&
LiteralProto::f32s() const {
  // @@protoc_insertion_point(field_list:xla.LiteralProto.f32s)
  return f32s_;
}
inline ::google::protobuf::RepeatedField< float >*
LiteralProto::mutable_f32s() {
  // @@protoc_insertion_point(field_mutable_list:xla.LiteralProto.f32s)
  return &f32s_;
}

// repeated double f64s = 9;
inline int LiteralProto::f64s_size() const {
  return f64s_.size();
}
inline void LiteralProto::clear_f64s() {
  f64s_.Clear();
}
inline double LiteralProto::f64s(int index) const {
  // @@protoc_insertion_point(field_get:xla.LiteralProto.f64s)
  return f64s_.Get(index);
}
inline void LiteralProto::set_f64s(int index, double value) {
  f64s_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.LiteralProto.f64s)
}
inline void LiteralProto::add_f64s(double value) {
  f64s_.Add(value);
  // @@protoc_insertion_point(field_add:xla.LiteralProto.f64s)
}
inline const ::google::protobuf::RepeatedField< double >&
LiteralProto::f64s() const {
  // @@protoc_insertion_point(field_list:xla.LiteralProto.f64s)
  return f64s_;
}
inline ::google::protobuf::RepeatedField< double >*
LiteralProto::mutable_f64s() {
  // @@protoc_insertion_point(field_mutable_list:xla.LiteralProto.f64s)
  return &f64s_;
}

// repeated float c64s = 12;
inline int LiteralProto::c64s_size() const {
  return c64s_.size();
}
inline void LiteralProto::clear_c64s() {
  c64s_.Clear();
}
inline float LiteralProto::c64s(int index) const {
  // @@protoc_insertion_point(field_get:xla.LiteralProto.c64s)
  return c64s_.Get(index);
}
inline void LiteralProto::set_c64s(int index, float value) {
  c64s_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.LiteralProto.c64s)
}
inline void LiteralProto::add_c64s(float value) {
  c64s_.Add(value);
  // @@protoc_insertion_point(field_add:xla.LiteralProto.c64s)
}
inline const ::google::protobuf::RepeatedField< float >&
LiteralProto::c64s() const {
  // @@protoc_insertion_point(field_list:xla.LiteralProto.c64s)
  return c64s_;
}
inline ::google::protobuf::RepeatedField< float >*
LiteralProto::mutable_c64s() {
  // @@protoc_insertion_point(field_mutable_list:xla.LiteralProto.c64s)
  return &c64s_;
}

// repeated .xla.LiteralProto tuple_literals = 10;
inline int LiteralProto::tuple_literals_size() const {
  return tuple_literals_.size();
}
inline void LiteralProto::clear_tuple_literals() {
  tuple_literals_.Clear();
}
inline ::xla::LiteralProto* LiteralProto::mutable_tuple_literals(int index) {
  // @@protoc_insertion_point(field_mutable:xla.LiteralProto.tuple_literals)
  return tuple_literals_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::LiteralProto >*
LiteralProto::mutable_tuple_literals() {
  // @@protoc_insertion_point(field_mutable_list:xla.LiteralProto.tuple_literals)
  return &tuple_literals_;
}
inline const ::xla::LiteralProto& LiteralProto::tuple_literals(int index) const {
  // @@protoc_insertion_point(field_get:xla.LiteralProto.tuple_literals)
  return tuple_literals_.Get(index);
}
inline ::xla::LiteralProto* LiteralProto::add_tuple_literals() {
  // @@protoc_insertion_point(field_add:xla.LiteralProto.tuple_literals)
  return tuple_literals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::LiteralProto >&
LiteralProto::tuple_literals() const {
  // @@protoc_insertion_point(field_list:xla.LiteralProto.tuple_literals)
  return tuple_literals_;
}

// bytes f16s = 11;
inline void LiteralProto::clear_f16s() {
  f16s_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& LiteralProto::f16s() const {
  // @@protoc_insertion_point(field_get:xla.LiteralProto.f16s)
  return f16s_.Get();
}
inline void LiteralProto::set_f16s(const ::std::string& value) {
  
  f16s_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:xla.LiteralProto.f16s)
}
#if LANG_CXX11
inline void LiteralProto::set_f16s(::std::string&& value) {
  
  f16s_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:xla.LiteralProto.f16s)
}
#endif
inline void LiteralProto::set_f16s(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  f16s_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:xla.LiteralProto.f16s)
}
inline void LiteralProto::set_f16s(const void* value,
    size_t size) {
  
  f16s_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:xla.LiteralProto.f16s)
}
inline ::std::string* LiteralProto::mutable_f16s() {
  
  // @@protoc_insertion_point(field_mutable:xla.LiteralProto.f16s)
  return f16s_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* LiteralProto::release_f16s() {
  // @@protoc_insertion_point(field_release:xla.LiteralProto.f16s)
  
  return f16s_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void LiteralProto::set_allocated_f16s(::std::string* f16s) {
  if (f16s != NULL) {
    
  } else {
    
  }
  f16s_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), f16s,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:xla.LiteralProto.f16s)
}
inline ::std::string* LiteralProto::unsafe_arena_release_f16s() {
  // @@protoc_insertion_point(field_unsafe_arena_release:xla.LiteralProto.f16s)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return f16s_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void LiteralProto::unsafe_arena_set_allocated_f16s(
    ::std::string* f16s) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (f16s != NULL) {
    
  } else {
    
  }
  f16s_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      f16s, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.LiteralProto.f16s)
}

// bytes bf16s = 13;
inline void LiteralProto::clear_bf16s() {
  bf16s_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& LiteralProto::bf16s() const {
  // @@protoc_insertion_point(field_get:xla.LiteralProto.bf16s)
  return bf16s_.Get();
}
inline void LiteralProto::set_bf16s(const ::std::string& value) {
  
  bf16s_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:xla.LiteralProto.bf16s)
}
#if LANG_CXX11
inline void LiteralProto::set_bf16s(::std::string&& value) {
  
  bf16s_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:xla.LiteralProto.bf16s)
}
#endif
inline void LiteralProto::set_bf16s(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bf16s_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:xla.LiteralProto.bf16s)
}
inline void LiteralProto::set_bf16s(const void* value,
    size_t size) {
  
  bf16s_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:xla.LiteralProto.bf16s)
}
inline ::std::string* LiteralProto::mutable_bf16s() {
  
  // @@protoc_insertion_point(field_mutable:xla.LiteralProto.bf16s)
  return bf16s_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* LiteralProto::release_bf16s() {
  // @@protoc_insertion_point(field_release:xla.LiteralProto.bf16s)
  
  return bf16s_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void LiteralProto::set_allocated_bf16s(::std::string* bf16s) {
  if (bf16s != NULL) {
    
  } else {
    
  }
  bf16s_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bf16s,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:xla.LiteralProto.bf16s)
}
inline ::std::string* LiteralProto::unsafe_arena_release_bf16s() {
  // @@protoc_insertion_point(field_unsafe_arena_release:xla.LiteralProto.bf16s)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return bf16s_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void LiteralProto::unsafe_arena_set_allocated_bf16s(
    ::std::string* bf16s) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (bf16s != NULL) {
    
  } else {
    
  }
  bf16s_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      bf16s, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.LiteralProto.bf16s)
}

// repeated int64 sparse_indices = 14;
inline int LiteralProto::sparse_indices_size() const {
  return sparse_indices_.size();
}
inline void LiteralProto::clear_sparse_indices() {
  sparse_indices_.Clear();
}
inline ::google::protobuf::int64 LiteralProto::sparse_indices(int index) const {
  // @@protoc_insertion_point(field_get:xla.LiteralProto.sparse_indices)
  return sparse_indices_.Get(index);
}
inline void LiteralProto::set_sparse_indices(int index, ::google::protobuf::int64 value) {
  sparse_indices_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.LiteralProto.sparse_indices)
}
inline void LiteralProto::add_sparse_indices(::google::protobuf::int64 value) {
  sparse_indices_.Add(value);
  // @@protoc_insertion_point(field_add:xla.LiteralProto.sparse_indices)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
LiteralProto::sparse_indices() const {
  // @@protoc_insertion_point(field_list:xla.LiteralProto.sparse_indices)
  return sparse_indices_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
LiteralProto::mutable_sparse_indices() {
  // @@protoc_insertion_point(field_mutable_list:xla.LiteralProto.sparse_indices)
  return &sparse_indices_;
}

// -------------------------------------------------------------------

// WindowDimension

// int64 size = 1;
inline void WindowDimension::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 WindowDimension::size() const {
  // @@protoc_insertion_point(field_get:xla.WindowDimension.size)
  return size_;
}
inline void WindowDimension::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:xla.WindowDimension.size)
}

// int64 stride = 2;
inline void WindowDimension::clear_stride() {
  stride_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 WindowDimension::stride() const {
  // @@protoc_insertion_point(field_get:xla.WindowDimension.stride)
  return stride_;
}
inline void WindowDimension::set_stride(::google::protobuf::int64 value) {
  
  stride_ = value;
  // @@protoc_insertion_point(field_set:xla.WindowDimension.stride)
}

// int64 padding_low = 3;
inline void WindowDimension::clear_padding_low() {
  padding_low_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 WindowDimension::padding_low() const {
  // @@protoc_insertion_point(field_get:xla.WindowDimension.padding_low)
  return padding_low_;
}
inline void WindowDimension::set_padding_low(::google::protobuf::int64 value) {
  
  padding_low_ = value;
  // @@protoc_insertion_point(field_set:xla.WindowDimension.padding_low)
}

// int64 padding_high = 4;
inline void WindowDimension::clear_padding_high() {
  padding_high_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 WindowDimension::padding_high() const {
  // @@protoc_insertion_point(field_get:xla.WindowDimension.padding_high)
  return padding_high_;
}
inline void WindowDimension::set_padding_high(::google::protobuf::int64 value) {
  
  padding_high_ = value;
  // @@protoc_insertion_point(field_set:xla.WindowDimension.padding_high)
}

// int64 window_dilation = 5;
inline void WindowDimension::clear_window_dilation() {
  window_dilation_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 WindowDimension::window_dilation() const {
  // @@protoc_insertion_point(field_get:xla.WindowDimension.window_dilation)
  return window_dilation_;
}
inline void WindowDimension::set_window_dilation(::google::protobuf::int64 value) {
  
  window_dilation_ = value;
  // @@protoc_insertion_point(field_set:xla.WindowDimension.window_dilation)
}

// int64 base_dilation = 6;
inline void WindowDimension::clear_base_dilation() {
  base_dilation_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 WindowDimension::base_dilation() const {
  // @@protoc_insertion_point(field_get:xla.WindowDimension.base_dilation)
  return base_dilation_;
}
inline void WindowDimension::set_base_dilation(::google::protobuf::int64 value) {
  
  base_dilation_ = value;
  // @@protoc_insertion_point(field_set:xla.WindowDimension.base_dilation)
}

// bool window_reversal = 7;
inline void WindowDimension::clear_window_reversal() {
  window_reversal_ = false;
}
inline bool WindowDimension::window_reversal() const {
  // @@protoc_insertion_point(field_get:xla.WindowDimension.window_reversal)
  return window_reversal_;
}
inline void WindowDimension::set_window_reversal(bool value) {
  
  window_reversal_ = value;
  // @@protoc_insertion_point(field_set:xla.WindowDimension.window_reversal)
}

// -------------------------------------------------------------------

// Window

// repeated .xla.WindowDimension dimensions = 1;
inline int Window::dimensions_size() const {
  return dimensions_.size();
}
inline void Window::clear_dimensions() {
  dimensions_.Clear();
}
inline ::xla::WindowDimension* Window::mutable_dimensions(int index) {
  // @@protoc_insertion_point(field_mutable:xla.Window.dimensions)
  return dimensions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::WindowDimension >*
Window::mutable_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.Window.dimensions)
  return &dimensions_;
}
inline const ::xla::WindowDimension& Window::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.Window.dimensions)
  return dimensions_.Get(index);
}
inline ::xla::WindowDimension* Window::add_dimensions() {
  // @@protoc_insertion_point(field_add:xla.Window.dimensions)
  return dimensions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::WindowDimension >&
Window::dimensions() const {
  // @@protoc_insertion_point(field_list:xla.Window.dimensions)
  return dimensions_;
}

// -------------------------------------------------------------------

// GatherDimensionNumbers

// repeated int64 output_window_dims = 1;
inline int GatherDimensionNumbers::output_window_dims_size() const {
  return output_window_dims_.size();
}
inline void GatherDimensionNumbers::clear_output_window_dims() {
  output_window_dims_.Clear();
}
inline ::google::protobuf::int64 GatherDimensionNumbers::output_window_dims(int index) const {
  // @@protoc_insertion_point(field_get:xla.GatherDimensionNumbers.output_window_dims)
  return output_window_dims_.Get(index);
}
inline void GatherDimensionNumbers::set_output_window_dims(int index, ::google::protobuf::int64 value) {
  output_window_dims_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.GatherDimensionNumbers.output_window_dims)
}
inline void GatherDimensionNumbers::add_output_window_dims(::google::protobuf::int64 value) {
  output_window_dims_.Add(value);
  // @@protoc_insertion_point(field_add:xla.GatherDimensionNumbers.output_window_dims)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GatherDimensionNumbers::output_window_dims() const {
  // @@protoc_insertion_point(field_list:xla.GatherDimensionNumbers.output_window_dims)
  return output_window_dims_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GatherDimensionNumbers::mutable_output_window_dims() {
  // @@protoc_insertion_point(field_mutable_list:xla.GatherDimensionNumbers.output_window_dims)
  return &output_window_dims_;
}

// repeated int64 elided_window_dims = 2;
inline int GatherDimensionNumbers::elided_window_dims_size() const {
  return elided_window_dims_.size();
}
inline void GatherDimensionNumbers::clear_elided_window_dims() {
  elided_window_dims_.Clear();
}
inline ::google::protobuf::int64 GatherDimensionNumbers::elided_window_dims(int index) const {
  // @@protoc_insertion_point(field_get:xla.GatherDimensionNumbers.elided_window_dims)
  return elided_window_dims_.Get(index);
}
inline void GatherDimensionNumbers::set_elided_window_dims(int index, ::google::protobuf::int64 value) {
  elided_window_dims_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.GatherDimensionNumbers.elided_window_dims)
}
inline void GatherDimensionNumbers::add_elided_window_dims(::google::protobuf::int64 value) {
  elided_window_dims_.Add(value);
  // @@protoc_insertion_point(field_add:xla.GatherDimensionNumbers.elided_window_dims)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GatherDimensionNumbers::elided_window_dims() const {
  // @@protoc_insertion_point(field_list:xla.GatherDimensionNumbers.elided_window_dims)
  return elided_window_dims_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GatherDimensionNumbers::mutable_elided_window_dims() {
  // @@protoc_insertion_point(field_mutable_list:xla.GatherDimensionNumbers.elided_window_dims)
  return &elided_window_dims_;
}

// repeated int64 gather_dims_to_operand_dims = 3;
inline int GatherDimensionNumbers::gather_dims_to_operand_dims_size() const {
  return gather_dims_to_operand_dims_.size();
}
inline void GatherDimensionNumbers::clear_gather_dims_to_operand_dims() {
  gather_dims_to_operand_dims_.Clear();
}
inline ::google::protobuf::int64 GatherDimensionNumbers::gather_dims_to_operand_dims(int index) const {
  // @@protoc_insertion_point(field_get:xla.GatherDimensionNumbers.gather_dims_to_operand_dims)
  return gather_dims_to_operand_dims_.Get(index);
}
inline void GatherDimensionNumbers::set_gather_dims_to_operand_dims(int index, ::google::protobuf::int64 value) {
  gather_dims_to_operand_dims_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.GatherDimensionNumbers.gather_dims_to_operand_dims)
}
inline void GatherDimensionNumbers::add_gather_dims_to_operand_dims(::google::protobuf::int64 value) {
  gather_dims_to_operand_dims_.Add(value);
  // @@protoc_insertion_point(field_add:xla.GatherDimensionNumbers.gather_dims_to_operand_dims)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GatherDimensionNumbers::gather_dims_to_operand_dims() const {
  // @@protoc_insertion_point(field_list:xla.GatherDimensionNumbers.gather_dims_to_operand_dims)
  return gather_dims_to_operand_dims_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GatherDimensionNumbers::mutable_gather_dims_to_operand_dims() {
  // @@protoc_insertion_point(field_mutable_list:xla.GatherDimensionNumbers.gather_dims_to_operand_dims)
  return &gather_dims_to_operand_dims_;
}

// int64 index_vector_dim = 4;
inline void GatherDimensionNumbers::clear_index_vector_dim() {
  index_vector_dim_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GatherDimensionNumbers::index_vector_dim() const {
  // @@protoc_insertion_point(field_get:xla.GatherDimensionNumbers.index_vector_dim)
  return index_vector_dim_;
}
inline void GatherDimensionNumbers::set_index_vector_dim(::google::protobuf::int64 value) {
  
  index_vector_dim_ = value;
  // @@protoc_insertion_point(field_set:xla.GatherDimensionNumbers.index_vector_dim)
}

// -------------------------------------------------------------------

// ConvolutionDimensionNumbers

// int64 input_batch_dimension = 7;
inline void ConvolutionDimensionNumbers::clear_input_batch_dimension() {
  input_batch_dimension_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ConvolutionDimensionNumbers::input_batch_dimension() const {
  // @@protoc_insertion_point(field_get:xla.ConvolutionDimensionNumbers.input_batch_dimension)
  return input_batch_dimension_;
}
inline void ConvolutionDimensionNumbers::set_input_batch_dimension(::google::protobuf::int64 value) {
  
  input_batch_dimension_ = value;
  // @@protoc_insertion_point(field_set:xla.ConvolutionDimensionNumbers.input_batch_dimension)
}

// int64 input_feature_dimension = 8;
inline void ConvolutionDimensionNumbers::clear_input_feature_dimension() {
  input_feature_dimension_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ConvolutionDimensionNumbers::input_feature_dimension() const {
  // @@protoc_insertion_point(field_get:xla.ConvolutionDimensionNumbers.input_feature_dimension)
  return input_feature_dimension_;
}
inline void ConvolutionDimensionNumbers::set_input_feature_dimension(::google::protobuf::int64 value) {
  
  input_feature_dimension_ = value;
  // @@protoc_insertion_point(field_set:xla.ConvolutionDimensionNumbers.input_feature_dimension)
}

// repeated int64 input_spatial_dimensions = 11;
inline int ConvolutionDimensionNumbers::input_spatial_dimensions_size() const {
  return input_spatial_dimensions_.size();
}
inline void ConvolutionDimensionNumbers::clear_input_spatial_dimensions() {
  input_spatial_dimensions_.Clear();
}
inline ::google::protobuf::int64 ConvolutionDimensionNumbers::input_spatial_dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.ConvolutionDimensionNumbers.input_spatial_dimensions)
  return input_spatial_dimensions_.Get(index);
}
inline void ConvolutionDimensionNumbers::set_input_spatial_dimensions(int index, ::google::protobuf::int64 value) {
  input_spatial_dimensions_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.ConvolutionDimensionNumbers.input_spatial_dimensions)
}
inline void ConvolutionDimensionNumbers::add_input_spatial_dimensions(::google::protobuf::int64 value) {
  input_spatial_dimensions_.Add(value);
  // @@protoc_insertion_point(field_add:xla.ConvolutionDimensionNumbers.input_spatial_dimensions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ConvolutionDimensionNumbers::input_spatial_dimensions() const {
  // @@protoc_insertion_point(field_list:xla.ConvolutionDimensionNumbers.input_spatial_dimensions)
  return input_spatial_dimensions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ConvolutionDimensionNumbers::mutable_input_spatial_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.ConvolutionDimensionNumbers.input_spatial_dimensions)
  return &input_spatial_dimensions_;
}

// int64 kernel_input_feature_dimension = 3;
inline void ConvolutionDimensionNumbers::clear_kernel_input_feature_dimension() {
  kernel_input_feature_dimension_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ConvolutionDimensionNumbers::kernel_input_feature_dimension() const {
  // @@protoc_insertion_point(field_get:xla.ConvolutionDimensionNumbers.kernel_input_feature_dimension)
  return kernel_input_feature_dimension_;
}
inline void ConvolutionDimensionNumbers::set_kernel_input_feature_dimension(::google::protobuf::int64 value) {
  
  kernel_input_feature_dimension_ = value;
  // @@protoc_insertion_point(field_set:xla.ConvolutionDimensionNumbers.kernel_input_feature_dimension)
}

// int64 kernel_output_feature_dimension = 4;
inline void ConvolutionDimensionNumbers::clear_kernel_output_feature_dimension() {
  kernel_output_feature_dimension_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ConvolutionDimensionNumbers::kernel_output_feature_dimension() const {
  // @@protoc_insertion_point(field_get:xla.ConvolutionDimensionNumbers.kernel_output_feature_dimension)
  return kernel_output_feature_dimension_;
}
inline void ConvolutionDimensionNumbers::set_kernel_output_feature_dimension(::google::protobuf::int64 value) {
  
  kernel_output_feature_dimension_ = value;
  // @@protoc_insertion_point(field_set:xla.ConvolutionDimensionNumbers.kernel_output_feature_dimension)
}

// repeated int64 kernel_spatial_dimensions = 6;
inline int ConvolutionDimensionNumbers::kernel_spatial_dimensions_size() const {
  return kernel_spatial_dimensions_.size();
}
inline void ConvolutionDimensionNumbers::clear_kernel_spatial_dimensions() {
  kernel_spatial_dimensions_.Clear();
}
inline ::google::protobuf::int64 ConvolutionDimensionNumbers::kernel_spatial_dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.ConvolutionDimensionNumbers.kernel_spatial_dimensions)
  return kernel_spatial_dimensions_.Get(index);
}
inline void ConvolutionDimensionNumbers::set_kernel_spatial_dimensions(int index, ::google::protobuf::int64 value) {
  kernel_spatial_dimensions_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.ConvolutionDimensionNumbers.kernel_spatial_dimensions)
}
inline void ConvolutionDimensionNumbers::add_kernel_spatial_dimensions(::google::protobuf::int64 value) {
  kernel_spatial_dimensions_.Add(value);
  // @@protoc_insertion_point(field_add:xla.ConvolutionDimensionNumbers.kernel_spatial_dimensions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ConvolutionDimensionNumbers::kernel_spatial_dimensions() const {
  // @@protoc_insertion_point(field_list:xla.ConvolutionDimensionNumbers.kernel_spatial_dimensions)
  return kernel_spatial_dimensions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ConvolutionDimensionNumbers::mutable_kernel_spatial_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.ConvolutionDimensionNumbers.kernel_spatial_dimensions)
  return &kernel_spatial_dimensions_;
}

// int64 output_batch_dimension = 9;
inline void ConvolutionDimensionNumbers::clear_output_batch_dimension() {
  output_batch_dimension_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ConvolutionDimensionNumbers::output_batch_dimension() const {
  // @@protoc_insertion_point(field_get:xla.ConvolutionDimensionNumbers.output_batch_dimension)
  return output_batch_dimension_;
}
inline void ConvolutionDimensionNumbers::set_output_batch_dimension(::google::protobuf::int64 value) {
  
  output_batch_dimension_ = value;
  // @@protoc_insertion_point(field_set:xla.ConvolutionDimensionNumbers.output_batch_dimension)
}

// int64 output_feature_dimension = 10;
inline void ConvolutionDimensionNumbers::clear_output_feature_dimension() {
  output_feature_dimension_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ConvolutionDimensionNumbers::output_feature_dimension() const {
  // @@protoc_insertion_point(field_get:xla.ConvolutionDimensionNumbers.output_feature_dimension)
  return output_feature_dimension_;
}
inline void ConvolutionDimensionNumbers::set_output_feature_dimension(::google::protobuf::int64 value) {
  
  output_feature_dimension_ = value;
  // @@protoc_insertion_point(field_set:xla.ConvolutionDimensionNumbers.output_feature_dimension)
}

// repeated int64 output_spatial_dimensions = 12;
inline int ConvolutionDimensionNumbers::output_spatial_dimensions_size() const {
  return output_spatial_dimensions_.size();
}
inline void ConvolutionDimensionNumbers::clear_output_spatial_dimensions() {
  output_spatial_dimensions_.Clear();
}
inline ::google::protobuf::int64 ConvolutionDimensionNumbers::output_spatial_dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.ConvolutionDimensionNumbers.output_spatial_dimensions)
  return output_spatial_dimensions_.Get(index);
}
inline void ConvolutionDimensionNumbers::set_output_spatial_dimensions(int index, ::google::protobuf::int64 value) {
  output_spatial_dimensions_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.ConvolutionDimensionNumbers.output_spatial_dimensions)
}
inline void ConvolutionDimensionNumbers::add_output_spatial_dimensions(::google::protobuf::int64 value) {
  output_spatial_dimensions_.Add(value);
  // @@protoc_insertion_point(field_add:xla.ConvolutionDimensionNumbers.output_spatial_dimensions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ConvolutionDimensionNumbers::output_spatial_dimensions() const {
  // @@protoc_insertion_point(field_list:xla.ConvolutionDimensionNumbers.output_spatial_dimensions)
  return output_spatial_dimensions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ConvolutionDimensionNumbers::mutable_output_spatial_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.ConvolutionDimensionNumbers.output_spatial_dimensions)
  return &output_spatial_dimensions_;
}

// -------------------------------------------------------------------

// DotDimensionNumbers

// repeated int64 lhs_contracting_dimensions = 1;
inline int DotDimensionNumbers::lhs_contracting_dimensions_size() const {
  return lhs_contracting_dimensions_.size();
}
inline void DotDimensionNumbers::clear_lhs_contracting_dimensions() {
  lhs_contracting_dimensions_.Clear();
}
inline ::google::protobuf::int64 DotDimensionNumbers::lhs_contracting_dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.DotDimensionNumbers.lhs_contracting_dimensions)
  return lhs_contracting_dimensions_.Get(index);
}
inline void DotDimensionNumbers::set_lhs_contracting_dimensions(int index, ::google::protobuf::int64 value) {
  lhs_contracting_dimensions_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.DotDimensionNumbers.lhs_contracting_dimensions)
}
inline void DotDimensionNumbers::add_lhs_contracting_dimensions(::google::protobuf::int64 value) {
  lhs_contracting_dimensions_.Add(value);
  // @@protoc_insertion_point(field_add:xla.DotDimensionNumbers.lhs_contracting_dimensions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DotDimensionNumbers::lhs_contracting_dimensions() const {
  // @@protoc_insertion_point(field_list:xla.DotDimensionNumbers.lhs_contracting_dimensions)
  return lhs_contracting_dimensions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DotDimensionNumbers::mutable_lhs_contracting_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.DotDimensionNumbers.lhs_contracting_dimensions)
  return &lhs_contracting_dimensions_;
}

// repeated int64 rhs_contracting_dimensions = 2;
inline int DotDimensionNumbers::rhs_contracting_dimensions_size() const {
  return rhs_contracting_dimensions_.size();
}
inline void DotDimensionNumbers::clear_rhs_contracting_dimensions() {
  rhs_contracting_dimensions_.Clear();
}
inline ::google::protobuf::int64 DotDimensionNumbers::rhs_contracting_dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.DotDimensionNumbers.rhs_contracting_dimensions)
  return rhs_contracting_dimensions_.Get(index);
}
inline void DotDimensionNumbers::set_rhs_contracting_dimensions(int index, ::google::protobuf::int64 value) {
  rhs_contracting_dimensions_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.DotDimensionNumbers.rhs_contracting_dimensions)
}
inline void DotDimensionNumbers::add_rhs_contracting_dimensions(::google::protobuf::int64 value) {
  rhs_contracting_dimensions_.Add(value);
  // @@protoc_insertion_point(field_add:xla.DotDimensionNumbers.rhs_contracting_dimensions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DotDimensionNumbers::rhs_contracting_dimensions() const {
  // @@protoc_insertion_point(field_list:xla.DotDimensionNumbers.rhs_contracting_dimensions)
  return rhs_contracting_dimensions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DotDimensionNumbers::mutable_rhs_contracting_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.DotDimensionNumbers.rhs_contracting_dimensions)
  return &rhs_contracting_dimensions_;
}

// repeated int64 lhs_batch_dimensions = 3;
inline int DotDimensionNumbers::lhs_batch_dimensions_size() const {
  return lhs_batch_dimensions_.size();
}
inline void DotDimensionNumbers::clear_lhs_batch_dimensions() {
  lhs_batch_dimensions_.Clear();
}
inline ::google::protobuf::int64 DotDimensionNumbers::lhs_batch_dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.DotDimensionNumbers.lhs_batch_dimensions)
  return lhs_batch_dimensions_.Get(index);
}
inline void DotDimensionNumbers::set_lhs_batch_dimensions(int index, ::google::protobuf::int64 value) {
  lhs_batch_dimensions_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.DotDimensionNumbers.lhs_batch_dimensions)
}
inline void DotDimensionNumbers::add_lhs_batch_dimensions(::google::protobuf::int64 value) {
  lhs_batch_dimensions_.Add(value);
  // @@protoc_insertion_point(field_add:xla.DotDimensionNumbers.lhs_batch_dimensions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DotDimensionNumbers::lhs_batch_dimensions() const {
  // @@protoc_insertion_point(field_list:xla.DotDimensionNumbers.lhs_batch_dimensions)
  return lhs_batch_dimensions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DotDimensionNumbers::mutable_lhs_batch_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.DotDimensionNumbers.lhs_batch_dimensions)
  return &lhs_batch_dimensions_;
}

// repeated int64 rhs_batch_dimensions = 4;
inline int DotDimensionNumbers::rhs_batch_dimensions_size() const {
  return rhs_batch_dimensions_.size();
}
inline void DotDimensionNumbers::clear_rhs_batch_dimensions() {
  rhs_batch_dimensions_.Clear();
}
inline ::google::protobuf::int64 DotDimensionNumbers::rhs_batch_dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.DotDimensionNumbers.rhs_batch_dimensions)
  return rhs_batch_dimensions_.Get(index);
}
inline void DotDimensionNumbers::set_rhs_batch_dimensions(int index, ::google::protobuf::int64 value) {
  rhs_batch_dimensions_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.DotDimensionNumbers.rhs_batch_dimensions)
}
inline void DotDimensionNumbers::add_rhs_batch_dimensions(::google::protobuf::int64 value) {
  rhs_batch_dimensions_.Add(value);
  // @@protoc_insertion_point(field_add:xla.DotDimensionNumbers.rhs_batch_dimensions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DotDimensionNumbers::rhs_batch_dimensions() const {
  // @@protoc_insertion_point(field_list:xla.DotDimensionNumbers.rhs_batch_dimensions)
  return rhs_batch_dimensions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DotDimensionNumbers::mutable_rhs_batch_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.DotDimensionNumbers.rhs_batch_dimensions)
  return &rhs_batch_dimensions_;
}

// -------------------------------------------------------------------

// OpSharding

// .xla.OpSharding.Type type = 1;
inline void OpSharding::clear_type() {
  type_ = 0;
}
inline ::xla::OpSharding_Type OpSharding::type() const {
  // @@protoc_insertion_point(field_get:xla.OpSharding.type)
  return static_cast< ::xla::OpSharding_Type >(type_);
}
inline void OpSharding::set_type(::xla::OpSharding_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:xla.OpSharding.type)
}

// .xla.Shape tile_shape = 2;
inline bool OpSharding::has_tile_shape() const {
  return this != internal_default_instance() && tile_shape_ != NULL;
}
inline void OpSharding::clear_tile_shape() {
  if (GetArenaNoVirtual() == NULL && tile_shape_ != NULL) {
    delete tile_shape_;
  }
  tile_shape_ = NULL;
}
inline const ::xla::Shape& OpSharding::tile_shape() const {
  const ::xla::Shape* p = tile_shape_;
  // @@protoc_insertion_point(field_get:xla.OpSharding.tile_shape)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::Shape*>(
      &::xla::_Shape_default_instance_);
}
inline ::xla::Shape* OpSharding::release_tile_shape() {
  // @@protoc_insertion_point(field_release:xla.OpSharding.tile_shape)
  
  ::xla::Shape* temp = tile_shape_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  tile_shape_ = NULL;
  return temp;
}
inline ::xla::Shape* OpSharding::unsafe_arena_release_tile_shape() {
  // @@protoc_insertion_point(field_unsafe_arena_release:xla.OpSharding.tile_shape)
  
  ::xla::Shape* temp = tile_shape_;
  tile_shape_ = NULL;
  return temp;
}
inline ::xla::Shape* OpSharding::mutable_tile_shape() {
  
  if (tile_shape_ == NULL) {
    tile_shape_ = ::google::protobuf::Arena::CreateMessage< ::xla::Shape >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.OpSharding.tile_shape)
  return tile_shape_;
}
inline void OpSharding::set_allocated_tile_shape(::xla::Shape* tile_shape) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tile_shape_;
  }
  if (tile_shape) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(tile_shape);
    if (message_arena != submessage_arena) {
      tile_shape = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tile_shape, submessage_arena);
    }
    
  } else {
    
  }
  tile_shape_ = tile_shape;
  // @@protoc_insertion_point(field_set_allocated:xla.OpSharding.tile_shape)
}

// repeated int64 tile_assignment_dimensions = 3;
inline int OpSharding::tile_assignment_dimensions_size() const {
  return tile_assignment_dimensions_.size();
}
inline void OpSharding::clear_tile_assignment_dimensions() {
  tile_assignment_dimensions_.Clear();
}
inline ::google::protobuf::int64 OpSharding::tile_assignment_dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.OpSharding.tile_assignment_dimensions)
  return tile_assignment_dimensions_.Get(index);
}
inline void OpSharding::set_tile_assignment_dimensions(int index, ::google::protobuf::int64 value) {
  tile_assignment_dimensions_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.OpSharding.tile_assignment_dimensions)
}
inline void OpSharding::add_tile_assignment_dimensions(::google::protobuf::int64 value) {
  tile_assignment_dimensions_.Add(value);
  // @@protoc_insertion_point(field_add:xla.OpSharding.tile_assignment_dimensions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
OpSharding::tile_assignment_dimensions() const {
  // @@protoc_insertion_point(field_list:xla.OpSharding.tile_assignment_dimensions)
  return tile_assignment_dimensions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
OpSharding::mutable_tile_assignment_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.OpSharding.tile_assignment_dimensions)
  return &tile_assignment_dimensions_;
}

// repeated int64 tile_assignment_devices = 4;
inline int OpSharding::tile_assignment_devices_size() const {
  return tile_assignment_devices_.size();
}
inline void OpSharding::clear_tile_assignment_devices() {
  tile_assignment_devices_.Clear();
}
inline ::google::protobuf::int64 OpSharding::tile_assignment_devices(int index) const {
  // @@protoc_insertion_point(field_get:xla.OpSharding.tile_assignment_devices)
  return tile_assignment_devices_.Get(index);
}
inline void OpSharding::set_tile_assignment_devices(int index, ::google::protobuf::int64 value) {
  tile_assignment_devices_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.OpSharding.tile_assignment_devices)
}
inline void OpSharding::add_tile_assignment_devices(::google::protobuf::int64 value) {
  tile_assignment_devices_.Add(value);
  // @@protoc_insertion_point(field_add:xla.OpSharding.tile_assignment_devices)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
OpSharding::tile_assignment_devices() const {
  // @@protoc_insertion_point(field_list:xla.OpSharding.tile_assignment_devices)
  return tile_assignment_devices_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
OpSharding::mutable_tile_assignment_devices() {
  // @@protoc_insertion_point(field_mutable_list:xla.OpSharding.tile_assignment_devices)
  return &tile_assignment_devices_;
}

// repeated .xla.OpSharding tuple_shardings = 5;
inline int OpSharding::tuple_shardings_size() const {
  return tuple_shardings_.size();
}
inline void OpSharding::clear_tuple_shardings() {
  tuple_shardings_.Clear();
}
inline ::xla::OpSharding* OpSharding::mutable_tuple_shardings(int index) {
  // @@protoc_insertion_point(field_mutable:xla.OpSharding.tuple_shardings)
  return tuple_shardings_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::OpSharding >*
OpSharding::mutable_tuple_shardings() {
  // @@protoc_insertion_point(field_mutable_list:xla.OpSharding.tuple_shardings)
  return &tuple_shardings_;
}
inline const ::xla::OpSharding& OpSharding::tuple_shardings(int index) const {
  // @@protoc_insertion_point(field_get:xla.OpSharding.tuple_shardings)
  return tuple_shardings_.Get(index);
}
inline ::xla::OpSharding* OpSharding::add_tuple_shardings() {
  // @@protoc_insertion_point(field_add:xla.OpSharding.tuple_shardings)
  return tuple_shardings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::OpSharding >&
OpSharding::tuple_shardings() const {
  // @@protoc_insertion_point(field_list:xla.OpSharding.tuple_shardings)
  return tuple_shardings_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace xla

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xla::OpSharding_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xla::OpSharding_Type>() {
  return ::xla::OpSharding_Type_descriptor();
}
template <> struct is_proto_enum< ::xla::PrimitiveType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xla::PrimitiveType>() {
  return ::xla::PrimitiveType_descriptor();
}
template <> struct is_proto_enum< ::xla::PaddingValue> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xla::PaddingValue>() {
  return ::xla::PaddingValue_descriptor();
}
template <> struct is_proto_enum< ::xla::Format> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xla::Format>() {
  return ::xla::Format_descriptor();
}
template <> struct is_proto_enum< ::xla::FftType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xla::FftType>() {
  return ::xla::FftType_descriptor();
}
template <> struct is_proto_enum< ::xla::RandomDistribution> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xla::RandomDistribution>() {
  return ::xla::RandomDistribution_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tensorflow_2fcompiler_2fxla_2fxla_5fdata_2eproto_INCLUDED
